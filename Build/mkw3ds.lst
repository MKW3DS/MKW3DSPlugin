00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0000000c 00000008 b CTRPluginFramework::g_buffers
00000014 00000001 B CTRPluginFramework::PrivColor::_useClamp
00000015 00000001 b __tls_guard
00000018 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000028 00000008 B CTRPluginFramework::Renderer::_rendererContext
07000100 T __start__
07000100 T _start
0700012c t ClearMem
07000140 t ClrLoop
07000158 T _init
07000170 T initLib
07000190 T __ctru_exit
0700019c t .udivsi3_skip_div0_test
0700019c T __aeabi_uidiv
0700019c 000001ec T __udivsi3
07000388 00000020 T __aeabi_uidivmod
070003a8 T __aeabi_idiv
070003a8 00000220 T __divsi3
070003b0 t .divsi3_skip_div0_test
070005c8 00000020 T __aeabi_idivmod
070005e8 00000004 W __aeabi_idiv0
070005e8 00000004 W __aeabi_ldiv0
070005ec 0000019c T __aeabi_frsub
070005f4 00000194 T __aeabi_fsub
070005f4 00000194 T __subsf3
070005f8 00000190 T __addsf3
070005f8 00000190 T __aeabi_fadd
07000788 00000028 T __aeabi_ui2f
07000788 00000028 T __floatunsisf
07000790 00000020 T __aeabi_i2f
07000790 00000020 T __floatsisf
070007b0 0000008c T __aeabi_ul2f
070007b0 0000008c T __floatundisf
070007c0 0000007c T __aeabi_l2f
070007c0 0000007c T __floatdisf
0700083c T __aeabi_ldivmod
07000910 00000014 T __restore_core_regs
07000910 00000014 T restore_core_regs
07000924 T __gnu_Unwind_Restore_VFP
0700092c T __gnu_Unwind_Save_VFP
07000934 T __gnu_Unwind_Restore_VFP_D
0700093c T __gnu_Unwind_Save_VFP_D
07000944 T __gnu_Unwind_Restore_VFP_D_16_to_31
0700094c T __gnu_Unwind_Save_VFP_D_16_to_31
07000954 T __gnu_Unwind_Restore_WMMXD
07000998 T __gnu_Unwind_Save_WMMXD
070009dc T __gnu_Unwind_Restore_WMMXC
070009f0 T __gnu_Unwind_Save_WMMXC
07000a04 00000024 T ___Unwind_RaiseException
07000a04 00000024 T _Unwind_RaiseException
07000a28 00000024 T ___Unwind_Resume
07000a28 00000024 T _Unwind_Resume
07000a4c 00000024 T ___Unwind_Resume_or_Rethrow
07000a4c 00000024 T _Unwind_Resume_or_Rethrow
07000a70 00000024 T ___Unwind_ForcedUnwind
07000a70 00000024 T _Unwind_ForcedUnwind
07000a94 00000024 T ___Unwind_Backtrace
07000a94 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_uldivmod
07000e8c t deregister_tm_clones
07000eb8 t register_tm_clones
07000ef0 t __do_global_dtors_aux
07000f34 t frame_dummy
07000f68 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
07000fe0 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.49]
07001078 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
070010d4 0000002c T CTRPluginFramework::findNearestSTMFD(unsigned long*)
07001100 000000c0 T CTRPluginFramework::storeAddrByOffset(unsigned long*, unsigned short)
070011c0 000002ac T CTRPluginFramework::processFileSystemOperations(unsigned long*, unsigned long*)
0700146c 000000f4 T CTRPluginFramework::main()
07001560 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001560 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0700159c 00000420 t CTRPluginFramework::onionConfig(CTRPluginFramework::MenuEntry*)
070019bc 000000c4 W void std::vector<unsigned long*, std::allocator<unsigned long*> >::_M_realloc_insert<unsigned long* const&>(__gnu_cxx::__normal_iterator<unsigned long**, std::vector<unsigned long*, std::allocator<unsigned long*> > >, unsigned long* const&)
07001a80 0000063c T CTRPluginFramework::deleteSecureVal()
070020bc 00000660 T CTRPluginFramework::initOnionFSHooks(unsigned long)
0700271c 000000f0 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
0700280c 00000038 t _GLOBAL__sub_I_fsMountArchivePat1
07002844 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
070028cc 00000024 W CTRPluginFramework::File::~File()
070028cc 00000024 W CTRPluginFramework::File::~File()
070028f0 0000009c T CTRPluginFramework::checkFolderExists(unsigned short*)
0700298c 00000038 T CTRPluginFramework::createDirectory(char*)
070029c4 00000050 T CTRPluginFramework::strcatu16(unsigned short*, char*, char*, char*)
07002a14 00000030 T CTRPluginFramework::strcmpu8u16(char*, unsigned short*)
07002a44 00000030 T CTRPluginFramework::strcmpdot(char*, char*)
07002a74 00000028 T CTRPluginFramework::strcpydot(char*, char*, int)
07002a9c 00000058 T CTRPluginFramework::OnionSave::debugAppend(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07002af4 000001d4 T CTRPluginFramework::OnionSave::saveSettings()
07002cc8 0000006c T CTRPluginFramework::OnionSave::existArchiveu16(unsigned short*)
07002d34 0000004c T CTRPluginFramework::OnionSave::existArchiveHnd(unsigned long long)
07002d80 0000006c T CTRPluginFramework::OnionSave::existArchiveu8(unsigned char*)
07002dec 00000148 T CTRPluginFramework::OnionSave::addArchiveHnd(unsigned long long, unsigned long)
07002f34 00000290 T CTRPluginFramework::OnionSave::addArchive(unsigned char*, unsigned long long)
070031c4 000000fc T CTRPluginFramework::OnionSave::removeModEntry(unsigned long)
070032c0 00000054 T CTRPluginFramework::OnionSave::checkEntryExists(char const*)
07003314 00000184 T CTRPluginFramework::OnionSave::addModEntry(char const*, unsigned char)
07003498 00000098 T CTRPluginFramework::OnionSave::loadDeafults()
07003530 00000210 T CTRPluginFramework::OnionSave::setupPackPaths()
07003740 0000005c T CTRPluginFramework::OnionSave::getArchive(unsigned short*, unsigned char*, bool)
0700379c 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
07003848 00000030 W std::__cxx11::to_string(unsigned long)
07003878 00000130 T CTRPluginFramework::entryNameCompareCallback(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070039a8 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07003a2c 0000011c T CTRPluginFramework::OnionSave::initDebug()
07003b48 000001ac T CTRPluginFramework::OnionSave::loadSettings()
07003cf4 00000404 T CTRPluginFramework::OnionSave::generateByPage[abi:cxx11](unsigned long&, unsigned long&, bool)
070040f8 00000024 W void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0700411c 000001a0 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_assign_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag)
070042bc 000000fc T CTRPluginFramework::showMsgKbd(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CTRPluginFramework::DialogType)
070043b8 00000054 T CTRPluginFramework::OnionSave::showRebootMsg()
0700440c 00000328 T CTRPluginFramework::OnionSave::addModEntryUI()
07004734 0000015c W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07004890 0000003c W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070048cc 000007d4 T CTRPluginFramework::OnionSave::editEntryById(unsigned long)
070050a0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.17]
07005118 00000040 T CTRPluginFramework::GetBuffer(bool)
07005158 000002b4 T CTRPluginFramework::calculateNewPath(unsigned short*, bool, bool, bool*)
0700540c 00000074 T CTRPluginFramework::fsOpenFileFunc(unsigned long, unsigned short*, unsigned long)
07005480 00000024 T CTRPluginFramework::fsDeleteFileFunc(unsigned short*)
070054a4 00000048 T CTRPluginFramework::fsRenameFileFunc(unsigned short*, unsigned short*)
070054ec 00000024 T CTRPluginFramework::fsDeleteDirectoryFunc(unsigned short*)
07005510 00000024 T CTRPluginFramework::fsDeleteDirectoryRecFunc(unsigned short*)
07005534 00000034 T CTRPluginFramework::fsCreateFileFunc(unsigned short*, unsigned long long)
07005568 00000024 T CTRPluginFramework::fsCreateDirectoryFunc(unsigned short*)
0700558c 00000048 T CTRPluginFramework::fsRenameDirectoryFunc(unsigned short*, unsigned short*)
070055d4 000000ac T CTRPluginFramework::checkFileExistsWithDir(unsigned short*)
07005680 00000050 T CTRPluginFramework::fsOpenDirectoryFunc(unsigned long, unsigned short*)
070056d0 000000a8 T CTRPluginFramework::fsRegArchiveCallback(unsigned char*, unsigned long*, unsigned long, unsigned long)
07005778 000000e4 T CTRPluginFramework::fsOpenArchiveFunc(unsigned long*, unsigned long long*, unsigned long, unsigned long, unsigned long, unsigned long)
0700585c 00000144 T CTRPluginFramework::fsFormatSaveData(int*, int, int, int, int, int, int, int, int, int, char)
070059a0 0000007c T CTRPluginFramework::fsSetThisSaveDataSecureValue(unsigned long, unsigned long long)
07005a1c 0000007c T CTRPluginFramework::Obsoleted_5_0_fsSetSaveDataSecureValue(unsigned long long, unsigned long, unsigned long, unsigned char)
07005a98 0000007c T CTRPluginFramework::fsSetSaveDataSecureValue(unsigned long long, unsigned long, unsigned long long, unsigned char)
07005b14 00000054 T getCurrentProcessHandle
07005b68 00000020 T rtFlushInstructionCache
07005b88 00000058 T rtInitHook
07005be0 00000040 T rtEnableHook
07005c20 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
07005c98 00000038 T OnLoadCro
07005cd0 00000004 W CTRPluginFramework::OnProcessExit()
07005cd4 00000170 T CTRPluginFramework::Initialize()
07005e44 000000a0 T CTRPluginFramework::ThreadExit()
07005ee4 00000060 T abort
07005f44 0000003c T CTRPluginFramework::ThreadInit(void*)
07005f80 0000006c T LaunchMainThread
07005fec 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
070060d0 000003f0 T CTRPluginFramework::KeepThreadMain(void*)
070064c0 00000058 t _GLOBAL__sub_I_g_gspEventThreadPriority
07006518 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
07006518 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
07006530 0000000c T CTRPluginFramework::Color::Color(unsigned long)
07006530 0000000c T CTRPluginFramework::Color::Color(unsigned long)
0700653c 00000008 T CTRPluginFramework::Color::ToU32() const
07006548 00000120 T CTRPluginFramework::Color::Fade(double)
07006668 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
070066a8 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
07006724 00000214 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07006938 00000120 t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
07006a58 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07006a58 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07006ac8 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuEntry*) const
07006adc 00000044 T CTRPluginFramework::PluginMenu::Run() const
07006b20 00000008 T CTRPluginFramework::PluginMenu::ShowWelcomeMessage(bool) const
07006b28 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
07006b30 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
07006b40 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07006b4c 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006b4c 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006b9c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07006b9c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07006bcc 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07006bd4 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07006c98 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07006d40 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006d40 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006d88 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07006d88 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07006df0 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07006df0 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07006e1c 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07006e24 00000008 T CTRPluginFramework::Keyboard::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)) const
07006e2c 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07006e48 00000028 T CTRPluginFramework::Keyboard::Open() const
07006e70 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
07006ee8 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07006f98 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07006fec 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07007054 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
0700705c 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
07007064 00000008 T CTRPluginFramework::Keyboard::CanAbort(bool) const
0700706c 00000008 T CTRPluginFramework::Keyboard::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)) const
07007074 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
07007110 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700719c 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
07007244 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
0700732c 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070073b8 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07007460 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07007548 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070075d4 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
0700767c 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07007764 00000028 t __tcf_0
0700778c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.31]
07007804 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
0700780c 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
0700788c 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07007908 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
070079e0 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070079e0 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070079fc 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070079fc 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07007a3c 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07007a4c 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07007b0c 00000020 T CTRPluginFramework::HotkeyManager::Count()
07007b2c 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007c9c 0000012c T CTRPluginFramework::HotkeyManager::AskForKeys()
07007dc8 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07007ef0 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.11]
07007f60 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.68]
07007fe8 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
0700802c 0000004c T CTRPluginFramework::Directory::Close() const
07008078 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
0700808c 00000008 T CTRPluginFramework::Directory::IsOpen() const
07008094 00000040 T CTRPluginFramework::Directory::Directory()
07008094 00000040 T CTRPluginFramework::Directory::Directory()
070080d4 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
07008108 00000060 T CTRPluginFramework::Directory::~Directory()
07008108 00000060 T CTRPluginFramework::Directory::~Directory()
07008168 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07008168 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07008188 00000098 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008220 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070082b8 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008358 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700842c 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070084c0 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700860c 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700860c 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07008664 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070086a0 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
070086a0 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
070086bc 00000170 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
0700882c 0000001c W CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&)
07008848 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.40]
07008970 00000078 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&) [clone .isra.42]
070089e8 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.64]
07008a50 000000ac t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.87]
07008afc 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07008b40 000001dc t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07008d1c 000001b4 T CTRPluginFramework::Directory::_List() const
07008ed0 000000e0 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07008fb0 000000e4 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009094 0000000c T CTRPluginFramework::FwkSettings::Get()
070090a0 000000e0 T CTRPluginFramework::FwkSettings::SetThemeDefault()
07009180 00000010 T CTRPluginFramework::Process::GetHandle()
07009190 00000010 T CTRPluginFramework::Process::GetTitleID()
070091a0 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070091fc 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07009234 00000024 T CTRPluginFramework::Process::GetTextSize()
07009258 00000008 T CTRPluginFramework::Process::Pause()
07009260 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07009270 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
07009318 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0700931c 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
07009368 00000038 T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
070093a0 0000003c T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
070093dc 00000028 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
07009404 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07009424 0000016c T CTRPluginFramework::Process::ReadString(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long, CTRPluginFramework::StringFormat)
07009590 0000002c T CTRPluginFramework::Hook::Hook()
07009590 0000002c T CTRPluginFramework::Hook::Hook()
070095bc 00000018 T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long, unsigned long)
070095d4 00000230 T CTRPluginFramework::Hook::Enable()
07009804 0000005c T CTRPluginFramework::Hook::Disable()
07009860 00000014 T CTRPluginFramework::Mutex::Mutex()
07009860 00000014 T CTRPluginFramework::Mutex::Mutex()
07009874 00000028 T CTRPluginFramework::Mutex::~Mutex()
07009874 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700989c 00000004 T CTRPluginFramework::Mutex::Lock()
070098a0 00000014 T CTRPluginFramework::Mutex::TryLock()
070098b4 00000004 T CTRPluginFramework::Mutex::Unlock()
070098b8 00000030 t CTRPluginFramework::GetCurrentTime()
070098e8 00000014 T CTRPluginFramework::Clock::Clock()
070098e8 00000014 T CTRPluginFramework::Clock::Clock()
070098fc 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
070098fc 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
07009904 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
0700993c 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
0700996c 00000044 T CTRPluginFramework::Clock::Restart()
070099b0 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
070099b0 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
070099d4 0000004c T CTRPluginFramework::Lock::~Lock()
070099d4 0000004c T CTRPluginFramework::Lock::~Lock()
07009a20 00000074 T CTRPluginFramework::File::Close() const
07009a94 000000b8 T CTRPluginFramework::File::Read(void*, unsigned long) const
07009b4c 000000f0 T CTRPluginFramework::File::Write(void const*, unsigned long)
07009c3c 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07009c68 000000e4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07009d4c 00000008 T CTRPluginFramework::File::Tell() const
07009d54 00000030 T CTRPluginFramework::File::Rewind() const
07009d84 00000034 T CTRPluginFramework::File::Flush() const
07009db8 0000006c T CTRPluginFramework::File::GetSize() const
07009e24 00000008 T CTRPluginFramework::File::IsOpen() const
07009e2c 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
07009e40 00000044 T CTRPluginFramework::File::File()
07009e40 00000044 T CTRPluginFramework::File::File()
07009e84 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009f18 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009fec 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a070 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a110 00000108 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0700a218 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700a218 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700a284 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0700a2cc 00000014 T CTRPluginFramework::Time::Time()
0700a2cc 00000014 T CTRPluginFramework::Time::Time()
0700a2e0 00000020 T CTRPluginFramework::Time::AsSeconds() const
0700a300 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
0700a318 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
0700a320 00000028 T CTRPluginFramework::Seconds(float)
0700a348 00000010 T CTRPluginFramework::Milliseconds(int)
0700a358 00000008 T CTRPluginFramework::Microseconds(long long)
0700a360 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700a374 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700a388 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700a39c 00000018 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700a3b4 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
0700a400 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
0700a418 00000010 T CTRPluginFramework::System::IsNew3DS()
0700a428 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0700a428 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0700a45c 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0700a45c 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0700a47c 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
0700a4d0 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
0700a518 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
0700a520 00000034 W std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*)
0700a554 00000018 W std::map<unsigned long, ThreadVars*, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::~map()
0700a554 00000018 W std::map<unsigned long, ThreadVars*, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::~map()
0700a56c 000000fc W std::pair<std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> >, bool> std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_insert_unique<std::pair<unsigned long, ThreadVars*> >(std::pair<unsigned long, ThreadVars*>&&)
0700a668 000001d0 T __ctrpf_getThreadVars
0700a838 00000064 t _GLOBAL__sub_I___ctrpf_getThreadVars
0700a89c 00000014 T CTRPluginFramework::Controller::GetKeysDown()
0700a8b0 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
0700a8cc 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
0700a8e8 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
0700a904 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
0700a920 0000002c T CTRPluginFramework::Controller::Update()
0700a94c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.37]
0700a9c4 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700aa20 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700aa7c 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0700aac0 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0700ab40 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700abf4 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700ad30 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0700ad68 0000001c T CTRPluginFramework::InitializeRandomEngine()
0700ad84 00000254 t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700afd8 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700afd8 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700b01c 00000740 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700b75c 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b764 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b7a8 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0700b8b4 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0700b91c 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0700b938 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
0700b974 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700b998 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b9bc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.19]
0700ba34 00000030 T CTRPluginFramework::GetRatio(int, int, int, int)
0700ba64 0000010c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0700bb70 000001cc t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0700bd3c 000002e0 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
0700c01c 000000cc T CTRPluginFramework::Preferences::LoadSettings()
0700c0e8 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0700c1a4 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
0700c260 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0700c2bc 00000050 T CTRPluginFramework::Preferences::LoadBackgrounds()
0700c30c 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
0700c38c 000001d0 T CTRPluginFramework::Preferences::WriteSettings()
0700c55c 00000004 T CTRPluginFramework::Preferences::Initialize()
0700c560 000000ec t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0700c64c 00000010 T CTRPluginFramework::Glyph::Width() const
0700c65c 00000060 T CTRPluginFramework::Font::Initialize()
0700c6bc 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0700ca10 00000304 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0700cd14 0000010c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0700ce20 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0700ce88 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0700cea8 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0700ced8 00000028 T CTRPluginFramework::Window::~Window()
0700ced8 00000028 T CTRPluginFramework::Window::~Window()
0700cf00 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700cf00 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700cfa0 00000064 T CTRPluginFramework::Window::Draw() const
0700d004 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700d0dc 00000018 T CTRPluginFramework::Window::DrawButton() const
0700d0f4 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0700d10c 00000018 T CTRPluginFramework::Window::MustClose() const
0700d124 0000002c T CTRPluginFramework::Window::Close() const
0700d150 00000004 T CTRPluginFramework::Window::GetRect() const
0700d154 0000002c T CTRPluginFramework::Window::UpdateBackgrounds()
0700d180 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0700d228 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0700d358 000000cc T CTRPluginFramework::Renderer::GetTextSize(char const*)
0700d424 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0700d570 00000148 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700d6b8 0000005c T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700d714 000001a4 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0700d8b8 00000204 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0700dabc 00000274 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0700dd30 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0700dda0 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0700de0c 00000014 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0700de20 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0700de44 0000001c T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0700de60 00000030 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0700de90 00000030 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0700dec0 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0700dee8 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0700df10 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0700df30 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0700df6c 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0700dfb4 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0700dff8 00000138 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0700e130 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
0700e15c 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0700e1cc 0000003c t __tls_init
0700e1cc 0000003c T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0700e208 00000040 T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0700e248 00000098 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e2e0 00000090 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e370 000000ac T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e41c 000000b8 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e4d4 000000b4 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e588 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.20]
0700e600 00000070 t CTRPluginFramework::memset32(void*, unsigned char, unsigned long) [clone .constprop.23]
0700e670 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
0700e694 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
0700e6b8 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
0700e6b8 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
0700e6f8 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
0700e700 00000008 T CTRPluginFramework::BMPImage::Width() const
0700e708 00000008 T CTRPluginFramework::BMPImage::Height() const
0700e710 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
0700e718 00000010 T CTRPluginFramework::BMPImage::data() const
0700e728 0000001c T CTRPluginFramework::BMPImage::end() const
0700e744 00000010 W CTRPluginFramework::BMPImage::DataClear()
0700e754 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
0700e754 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
0700e7fc 0000003c T CTRPluginFramework::BMPImage::Unload()
0700e838 00000144 T CTRPluginFramework::BMPImage::Draw(int, int)
0700e97c 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
0700e984 00000250 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0700ebd4 000001d4 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700eda8 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
0700edf0 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
0700ee20 000000d4 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0700eef4 00000080 T CTRPluginFramework::BMPImage::_CreateBitmap()
0700ef74 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
0700ef98 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
0700f0b4 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700f0b4 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700f108 00000320 T CTRPluginFramework::BMPImage::_LoadBitmap()
0700f428 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700f428 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700f474 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0700f4c0 00000300 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0700f7c0 000000c0 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0700f880 00000130 T CTRPluginFramework::Renderer::EndFrame(bool)
0700f9b0 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
0700fb1c 00000040 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.46]
0700fb5c 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0700fb5c 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0700fb7c 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0700fd20 0000011c T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0700fe3c 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0700fed0 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0700ff78 000002b0 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07010228 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07010228 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0701026c 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
070102c0 00000188 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
07010448 000000ac W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
070104f4 00000040 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
07010538 00000680 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07010bb8 000001a8 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07010d60 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
07010d60 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
07010d8c 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
07010d8c 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
07010dac 000000b0 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.37]
07010e5c 0000005c t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .constprop.38]
07010eb8 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07010eb8 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07010f3c 0000000c T CTRPluginFramework::OSDImpl::Lock()
07010f48 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07010f64 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07010f70 000000cc T CTRPluginFramework::OSDImpl::Draw()
0701103c 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
07011114 0000002c T CTRPluginFramework::OSDImpl::WaitFramePaused()
07011140 00000048 T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07011188 0000020c T CTRPluginFramework::InstallOSD()
07011394 00000048 T CTRPluginFramework::OSDImpl::_Initialize()
070113dc 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
070114b4 00000108 T CTRPluginFramework::OSDImpl::Update()
070115bc 00000688 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
07011c44 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
07011cac 0000006c T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07011d18 00000224 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07011f3c 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
07011f68 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
07011fa4 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
07011fe0 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0701201c 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
07012058 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07012094 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
070120c0 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
070120fc 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
07012138 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07012174 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
070121b0 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
070121dc 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
07012218 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
07012244 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
07012270 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
070122ac 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
070122d8 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07012314 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
07012340 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
07012374 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
070123b0 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
070123dc 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
07012418 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
07012444 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
07012470 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
0701249c 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
070124c8 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
070124f4 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
07012520 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0701254c 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
07012578 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
070125b4 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
070125e0 00000090 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.167]
07012670 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
07012670 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
07012690 00000030 W CTRPluginFramework::TextBox::~TextBox()
07012690 00000030 W CTRPluginFramework::TextBox::~TextBox()
070126c0 0000001c W CTRPluginFramework::TextBox::~TextBox()
070126dc 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070126dc 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070127bc 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
070127c4 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
070127c4 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07012858 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07012878 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07012a00 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07012a20 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07012a3c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
07012a58 00000008 T CTRPluginFramework::PluginMenuImpl::ShowWelcomeMessage(bool)
07012a60 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07012a68 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07012a70 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07012a70 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07012a90 000000e4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07012b74 000006fc T CTRPluginFramework::PluginMenuImpl::Run()
07013270 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
070132c8 000000e4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
070133ac 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
070133e8 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07013518 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07013654 000000b8 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0701370c 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07013814 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07013814 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07013898 000000f4 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0701398c 00000138 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
07013ac4 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07013c5c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
07013cd4 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07013cd4 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07013db0 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07013db0 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07013ec8 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07013f04 00000058 T CTRPluginFramework::Menu::CloseAll()
07013f5c 00000030 T CTRPluginFramework::Menu::~Menu()
07013f5c 00000030 T CTRPluginFramework::Menu::~Menu()
07013f8c 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
07013f98 00000008 T CTRPluginFramework::Menu::GetFolder() const
07013fa0 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
07013fa8 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
07013fe8 00000384 T CTRPluginFramework::Menu::Draw() const
0701436c 0000008c T CTRPluginFramework::Menu::_ScrollUp(int)
070143f8 0000008c T CTRPluginFramework::Menu::_ScrollDown(int)
07014484 00000228 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
070146ac 00000174 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
07014820 00000068 T CTRPluginFramework::Menu::ShowNote()
07014888 00000008 T CTRPluginFramework::Menu::CloseNote()
07014890 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07014898 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
070148d8 00000044 T CTRPluginFramework::Menu::Pop()
0701491c 000000c4 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
070149e0 000000b8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
07014a98 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
07014aa0 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
07014aa0 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
07014ac8 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
07014ae4 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07014ae4 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07014bb8 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07014bd4 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014bd4 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014c8c 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
07014ca0 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
07014cf0 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
07014d08 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
07014d2c 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
07014dd4 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
07014de4 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
07014e08 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
07014e68 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
07014e78 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
07014e88 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
07014e98 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07014f28 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
07015044 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
070150b4 000000a4 T CTRPluginFramework::HotkeysModifier::operator()()
07015158 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
07015184 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07015184 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
070151b4 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
070151b4 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07015220 00000154 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button&&)
07015374 0000003c W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::emplace_back<CTRPluginFramework::Button>(CTRPluginFramework::Button&&)
070153b0 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070153b0 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701551c 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
07015574 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07015628 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07015708 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
07015780 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07015780 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07015c44 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
07015c50 00000320 T CTRPluginFramework::PluginMenuHome::_RenderTop()
07015f70 00000108 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07016078 00000454 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
070164cc 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
070165e8 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07016674 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
070166b0 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
070166dc 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
070167ac 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
0701682c 0000007c T CTRPluginFramework::PluginMenuHome::Init()
070168a8 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0701692c 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07016988 00000040 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
070169c8 00000130 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07016af8 0000033c T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07016e34 00000214 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07017048 00000018 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
07017060 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
07017074 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
07017088 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0701709c 0000013c t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
070171d8 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
070171dc 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
070171e0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
070171f8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
07017210 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07017228 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
07017240 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07017258 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
07017270 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07017288 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
070172a0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
070172b8 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)
070172fc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
07017374 00000064 t CTRPluginFramework::MenuHotkeyModifier()
070173d8 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.76]
07017470 000001a4 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.65]
07017614 00000184 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07017798 000000ac t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07017844 00000124 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017968 0000005c t CTRPluginFramework::Reboot()
070179c4 00000064 t CTRPluginFramework::Shutdown()
07017a28 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07017c1c 00000a00 T CTRPluginFramework::PluginMenuTools::InitMenu()
0701861c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0701861c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
070187ac 0000011c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
070188c8 0000008c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
07018954 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
07018994 00000170 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07018b04 00000618 t CTRPluginFramework::ScreenshotMenuCallback()
0701911c 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07019158 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
07019194 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
070191a4 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070191a4 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701927c 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
0701927c 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
070192b8 0000001c T CTRPluginFramework::SubMenu::operator()()
070192d4 00000200 T CTRPluginFramework::SubMenu::Draw()
070194d4 000000c4 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07019598 00000008 T CTRPluginFramework::SubMenu::IsOpen()
070195a0 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
070195bc 000001a4 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07019760 0000004c T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070197ac 00000004 T CTRPluginFramework::HexEditor::FloatView::UpdateView()
070197ac 00000004 T CTRPluginFramework::HexEditor::FloatView::Draw()
070197b0 00000004 T CTRPluginFramework::HexEditor::FloatView::ProcessEvent(CTRPluginFramework::Event&)
070197b4 00000004 T CTRPluginFramework::HexEditor::FloatView::EditValueAtCursor(unsigned long)
070197b8 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
07019954 000000fc T CTRPluginFramework::HexEditor::IntegerView::Draw()
07019a50 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
07019b8c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
07019c04 00000250 T CTRPluginFramework::HexEditor::_RenderTop(void*)
07019e54 00000254 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701a0a8 000001fc T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701a2a4 000001e0 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701a484 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0701a4a0 000000bc T CTRPluginFramework::HexEditor::_CreateCheat()
0701a55c 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
0701a578 00000070 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0701a5e8 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
0701a618 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
0701a654 000000a8 T CTRPluginFramework::HexEditor::_ApplyChanges()
0701a6fc 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
0701a730 00000030 T CTRPluginFramework::HexEditor::_GetSelectedItem()
0701a760 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0701a7ec 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
0701a884 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0701a950 000000bc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
0701aa0c 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0701aabc 00000194 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0701ac50 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701ac60 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701ac70 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701ac80 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701ac80 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701aef4 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701af38 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0701b100 000000c4 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0701b1c4 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701b21c 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701b300 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701b484 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::HexEditor::Item*>(CTRPluginFramework::HexEditor::Item*, CTRPluginFramework::HexEditor::Item*)
0701b4b0 00000028 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::clear()
0701b4d8 00000154 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701b62c 00000074 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701b6a0 000001a0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::resize(unsigned int)
0701b840 00000160 T CTRPluginFramework::HexEditor::_Update()
0701b9a0 000002a0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701bc40 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701bc54 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701bc54 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701bc7c 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701bc98 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701bdb0 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701bdb0 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701be80 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701be80 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701bf54 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701bf5c 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701bf70 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701bf7c 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701bf84 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701bfa8 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701bfd8 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701bff4 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701c05c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701c05c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701c07c 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701c098 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701c098 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701c12c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c12c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c18c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c18c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c1ec 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0701c1f0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.29]
0701c268 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
0701c328 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0701c35c 000003f8 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.32]
0701c754 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701c76c 000002c4 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701ca30 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701ca30 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701cbf0 00000158 T CTRPluginFramework::GuideReader::Draw()
0701cd48 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701cdbc 00000068 t CTRPluginFramework::UnitsToNextChar(char const*, int) [clone .part.9]
0701ce24 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&&, CTRPluginFramework::Rect<int>&) [clone .isra.24]
0701ce24 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char&, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&, CTRPluginFramework::Rect<int>&) [clone .isra.30]
0701ce6c 0000004c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.26]
0701ceb8 0000000c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.44]
0701cec4 0000002c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.71]
0701cef0 0000005c t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.82]
0701cf4c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.52]
0701cfd4 00000064 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.53]
0701d038 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.57]
0701d038 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.55]
0701d098 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d098 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d244 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d244 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d400 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701d400 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701d464 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701d46c 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
0701d474 00000008 T CTRPluginFramework::KeyboardImpl::CanAbort(bool)
0701d47c 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701d484 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
0701d48c 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701d494 00000008 T CTRPluginFramework::KeyboardImpl::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&))
0701d49c 00000008 T CTRPluginFramework::KeyboardImpl::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&))
0701d4a4 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0701d608 00000458 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0701da60 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0701daf0 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0701db70 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0701dbf4 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0701dd54 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
0701dfd4 0000056c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0701e540 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0701e5a8 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0701e5f8 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
0701e668 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0701e670 000000c4 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
0701e734 000001dc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701e910 00000064 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
0701e974 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0701e9a0 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701e9a0 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701e9c0 000000cc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
0701ea8c 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
0701eb48 000000c4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
0701ec0c 0000056c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0701f178 00000570 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0701f6e8 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
0701f7a0 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
070201f4 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
070202ac 00000c44 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
07020ef0 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
07020f34 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
07020ff0 000001c4 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
070211b4 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
07021204 00000058 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
0702125c 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
070212a4 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
070215c8 00000254 T CTRPluginFramework::KeyboardImpl::Run()
0702181c 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07021894 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
070218a8 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
070218cc 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
07021954 00000110 t CTRPluginFramework::ProcessPathString(unsigned char*)
07021a64 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07021ac0 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.63]
07021b58 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07021b58 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07021da8 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07021ddc 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07021e30 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
07021e54 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
07021e7c 000000dc T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
07021f58 00000124 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
0702207c 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07022248 00000028 W CTRPluginFramework::ARCode::~ARCode()
07022248 00000028 W CTRPluginFramework::ARCode::~ARCode()
07022270 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
070223e8 0000017c T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07022564 00000168 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
070226cc 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
07022708 00000148 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
07022850 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
07022880 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07022954 00000200 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07022b54 00000078 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
07022bcc 000000c8 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07022c94 000001b8 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
07022e4c 000001a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
07022ff4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.59]
0702306c 0000005c T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
070230c8 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
070231e0 00000064 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
07023244 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
070233b0 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
070233b0 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07023808 000003bc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
07023bc4 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
07023c34 000000f4 t CTRPluginFramework::ClearSearchFolder()
07023d28 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
07023d5c 00000228 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
07023f84 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07023fac 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0702401c 000000c8 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
070240e4 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
07024120 00000268 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07024388 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0702446c 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
070244ac 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
070244dc 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
070245b0 0000028c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0702483c 000003b8 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07024bf4 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
07024c4c 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07024c4c 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07024c78 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
07024c84 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
07024c90 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07024dec 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
07024e28 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
07024e34 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
07024e40 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
07024e60 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07024ffc 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
07025058 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
070251b4 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
070251cc 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
070252f0 000000c4 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
070253b4 000001b0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07025564 000000c4 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07025628 00000080 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
070256a8 00000044 T CTRPluginFramework::Search::UpdateProgress()
070256ec 00000194 T CTRPluginFramework::Search::CheckNextRegion()
07025880 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
070258f8 00000008 T CTRPluginFramework::Search::GetHeader() const
07025900 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07025948 0000000c T CTRPluginFramework::Search::GetType() const
07025954 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0702596c 00000070 T CTRPluginFramework::Search::WriteHeader()
070259dc 00000058 T CTRPluginFramework::Search::WriteResults()
07025a34 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
07025a80 00000240 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
07025cc0 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07025cc0 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07025f00 000000c8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
07025fc8 00000088 T CTRPluginFramework::Search::CreateIndexTable()
07026050 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026050 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070261f8 00000080 T CTRPluginFramework::Search::Cancel()
07026278 00000118 T CTRPluginFramework::Search::ExecuteSearch()
07026390 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
07026454 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
07026514 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.108]
0702658c 00000268 T CTRPluginFramework::Search32::SecondSearchUnknown()
070267f4 00000290 T CTRPluginFramework::Search32::SecondSearchSpecified()
07026a84 00000048 W CTRPluginFramework::Search::~Search()
07026a84 00000048 W CTRPluginFramework::Search::~Search()
07026acc 00000044 T CTRPluginFramework::Search32::~Search32()
07026acc 00000044 T CTRPluginFramework::Search32::~Search32()
07026b10 0000001c T CTRPluginFramework::Search32::~Search32()
07026b2c 0000001c W CTRPluginFramework::Search::~Search()
07026b48 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07026b48 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07026d70 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026d70 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026d90 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07026d90 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07026e08 00000158 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07026f60 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07026fac 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
070270f0 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
07027234 00000030 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
07027264 000000c4 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07027328 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07027364 00000038 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
0702739c 000000e0 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0702747c 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
070274c8 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
070277e0 00000178 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07027958 000002ec T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
07027c44 000001a4 T CTRPluginFramework::Screenshot::UpdateFileCount()
07027de8 0000002c T CTRPluginFramework::Screenshot::Initialize()
07027e14 000000ac t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07027ec0 00000094 T CTRPluginFramework::SystemImpl::Initialize()
07027f54 0000003c T CTRPluginFramework::SystemImpl::Status()
07027f90 000000c8 T CTRPluginFramework::HookManager::Init()
07028058 00000018 T CTRPluginFramework::HookManager::Lock()
07028070 000000a8 T CTRPluginFramework::HookManager::AllocNewHook(unsigned long)
07028118 00000060 T CTRPluginFramework::HookManager::FreeHook(unsigned long&)
07028178 00000054 T CTRPluginFramework::Scheduler::~Scheduler()
07028178 00000054 T CTRPluginFramework::Scheduler::~Scheduler()
070281cc 00000058 T CTRPluginFramework::Scheduler::Core::Core()
070281cc 00000058 T CTRPluginFramework::Scheduler::Core::Core()
07028224 00000048 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0702826c 0000010c T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
07028378 0000009c T CTRPluginFramework::Scheduler::Initialize()
07028414 00000050 T CTRPluginFramework::Scheduler::Exit()
07028464 00000048 T CTRPluginFramework::Scheduler::Scheduler()
07028464 00000048 T CTRPluginFramework::Scheduler::Scheduler()
070284ac 0000006c T CTRPluginFramework::Scheduler::_PollTask(unsigned long)
07028518 000000d0 T CTRPluginFramework::Scheduler__CoreHandler(void*)
070285e8 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
07028618 0000001c t CTRPluginFramework::memcpy32(unsigned long*, unsigned long*, unsigned long)
07028634 00000108 t CTRPluginFramework::CreateBMP(unsigned long, unsigned long)
0702873c 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
07028754 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07028754 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07028798 00000054 T CTRPluginFramework::ScreenImpl::Initialize()
070287ec 000000e4 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
070288d0 00000138 T CTRPluginFramework::ScreenImpl::Acquire()
07028a08 0000009c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
07028aa4 00000030 T CTRPluginFramework::ScreenImpl::Copy()
07028ad4 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
07028adc 00000064 T CTRPluginFramework::ScreenToBMP_BGR8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07028b40 00000064 T CTRPluginFramework::ScreenToBMP_RGBA8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07028ba4 00000070 T CTRPluginFramework::ScreenToBMP_RGB565(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07028c14 00000074 T CTRPluginFramework::ScreenToBMP_RGB5A1(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07028c88 00000070 T CTRPluginFramework::ScreenToBMP_RGBA4(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07028cf8 000000d0 T CTRPluginFramework::ScreenImpl::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long)
07028dc8 000000c4 T CTRPluginFramework::ScreenImpl::Screenshot(int, CTRPluginFramework::BMPImage*)
07028e8c 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
07028ee8 000000a0 T CTRPluginFramework::ScreenImpl::Flush()
07028f88 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
07028fe0 000000bc T CTRPluginFramework::ScreenImpl::Clean()
0702909c 000000d8 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
07029174 00000068 T CTRPluginFramework::ScreenImpl::ApplyFading()
070291dc 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
070291e4 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
070291ec 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
070291f4 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
07029210 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
0702922c 00000058 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
07029284 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
070292b4 0000005c T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
07029310 00000078 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07029388 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
070293ac 00000004 t addrMapNodeDestructor(rbtree_node*)
070293b0 00000130 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
070294e0 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
070294e8 00000070 T CTRPluginFramework::Heap::Free(void*)
07029558 0000000c T CTRPluginFramework::Heap::SpaceFree()
07029564 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07029594 00000104 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07029698 000001dc W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
07029874 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07029874 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07029938 00000060 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
07029998 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
070299a4 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
070299e4 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
070299f4 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07029a0c 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
07029a20 00000004 T Kernel::Initialize()
07029a24 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
07029a3c 0000000c T KProcess::GetCurrent()
07029a48 00000024 T KProcess::PatchCore2Access()
07029a6c 0000002c T KProcess::PatchCategory(unsigned long)
07029a98 00000014 T KProcess__PatchCategory
07029aac 0000002c T KProcess::PatchMaxPriority(unsigned long)
07029ad8 00000014 T KProcess__PatchMaxPriority
07029aec 00000084 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
07029b70 00000034 t CTRPluginFramework::ThreadPredicate(KThread*)
07029ba4 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
07029ba4 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
07029bc4 000000e4 T CTRPluginFramework::ProcessImpl::Initialize()
07029ca8 00000018 T IsPaused
07029cc0 0000003c T CTRPluginFramework::ProcessImpl::Play(bool)
07029cfc 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
07029d18 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
07029d34 00000068 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
07029d9c 0000007c T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
07029e18 0000009c T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
07029eb4 000000b0 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
07029f64 000000c8 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0702a02c 000000d4 T CTRPluginFramework::ProcessImpl::UpdateMemRegions()
0702a100 00000098 T CTRPluginFramework::ProcessImpl::Pause(bool)
0702a198 0000005c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0702a1f4 00000090 T CTRPluginFramework::EventManager::EventManager()
0702a1f4 00000090 T CTRPluginFramework::EventManager::EventManager()
0702a284 00000160 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0702a3e4 0000003c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0702a420 0000029c T CTRPluginFramework::EventManager::ProcessEvents()
0702a6bc 000000f8 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0702a7b4 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0702a7bc 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0702a7e8 00000034 W MemPool::DelBlock(MemBlock*)
0702a81c 0000005c T MemPool::CoalesceRight(MemBlock*)
0702a878 00000118 T MemPool::Allocate(MemChunk&, unsigned long, int)
0702a990 000000fc T MemPool::Deallocate(MemChunk const&)
0702aa8c 00000020 T MemPool::GetFreeSpace()
0702aaac 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702aad0 00000004 t addrMapNodeDestructor(rbtree_node*)
0702aad4 00000154 T vramMemAlign
0702ac28 00000008 T vramAlloc
0702ac30 00000070 T vramFree
0702aca0 00000030 t _GLOBAL__sub_I_vramMemAlign
0702acd0 00000140 T __createThread
0702ae10 0000008c T __startThread
0702ae9c 0000004c T threadCreate
0702aee8 0000002c T threadFree
0702af14 00000024 T threadJoin
0702af38 00000020 T threadGetCurrent
0702af58 0000003c T threadExit
0702af94 0000003c t _thread_begin
0702afd0 00000050 T srvExit
0702b020 00000034 T srvRegisterClient
0702b054 00000064 T srvInit
0702b0b8 00000068 T srvGetServiceHandleDirect
0702b120 00000004 T srvGetServiceHandle
0702b124 00000034 T srvPublishToSubscriber
0702b158 000000a8 T fontEnsureMapped
0702b200 00000110 T fontGlyphIndexFromCodePoint
0702b310 00000074 T fontGetCharWidthInfo
0702b384 0000000c T __sync_init
0702b390 00000018 T __sync_fini
0702b3a8 00000018 T LightLock_Init
0702b3c0 0000008c T LightLock_Lock
0702b44c 00000034 T LightLock_TryLock
0702b480 00000050 T LightLock_Unlock
0702b4d0 00000018 T RecursiveLock_Init
0702b4e8 00000030 T RecursiveLock_Lock
0702b518 00000044 T RecursiveLock_TryLock
0702b55c 00000034 T RecursiveLock_Unlock
0702b590 00000030 T LightEvent_Init
0702b5c0 00000060 T LightEvent_Clear
0702b620 00000064 T LightEvent_Pulse
0702b684 000000b4 T LightEvent_Signal
0702b738 000000a8 T LightEvent_Wait
0702b7e0 000000a0 T cfguInit
0702b880 00000034 T cfguExit
0702b8b4 00000044 T CFGU_GetConfigInfoBlk2
0702b8f8 00000014 T CFGU_GetSystemLanguage
0702b90c 00000028 t fsSession
0702b934 00000044 t fsSessionForArchive
0702b978 00000038 T fsExit
0702b9b0 0000007c T fsMakePath
0702ba2c 00000028 T FSUSER_Initialize
0702ba54 000000b0 T fsInit
0702bb04 00000080 T FSUSER_OpenFile
0702bb84 000000b4 T FSUSER_OpenFileDirectly
0702bc38 00000068 T FSUSER_DeleteFile
0702bca0 000000a4 T FSUSER_RenameFile
0702bd44 00000068 T FSUSER_DeleteDirectoryRecursively
0702bdac 00000080 T FSUSER_CreateFile
0702be2c 00000070 T FSUSER_CreateDirectory
0702be9c 000000a4 T FSUSER_RenameDirectory
0702bf40 0000006c T FSUSER_OpenDirectory
0702bfac 00000074 T FSUSER_OpenArchive
0702c020 00000044 T FSUSER_CloseArchive
0702c064 00000058 T FSUSER_ControlSecureSave
0702c0bc 00000058 T FSFILE_Read
0702c114 00000060 T FSFILE_Write
0702c174 00000038 T FSFILE_GetSize
0702c1ac 00000028 T FSFILE_SetSize
0702c1d4 0000003c T FSFILE_Close
0702c210 00000024 T FSFILE_Flush
0702c234 00000054 T FSDIR_Read
0702c288 0000003c T FSDIR_Close
0702c2c4 00000104 T aptSendCommand
0702c3c8 0000006c T APT_CheckNew3DS
0702c434 00000048 T APT_GetSharedFont
0702c47c 000000a0 T amInit
0702c51c 00000034 T amExit
0702c550 00000088 T acInit
0702c5d8 00000034 T acExit
0702c60c 000000bc T hidExit
0702c6c8 00000034 T hidCheckSectionUpdateTime
0702c6fc 00000174 T hidScanInput
0702c870 00000010 T hidKeysHeld
0702c880 00000010 T hidKeysDown
0702c890 00000010 T hidKeysUp
0702c8a0 00000018 T hidTouchRead
0702c8b8 00000090 T HIDUSER_GetHandles
0702c948 00000174 T hidInit
0702cabc 000000e8 t gspEventThreadMain
0702cba4 000000a0 T gspInitEventHandler
0702cc44 00000040 T gspExitEventHandler
0702cc84 0000008c T gspExit
0702cd10 0000005c T gspWaitForEvent
0702cd6c 00000064 T GSPGPU_RegisterInterruptRelayQueue
0702cdd0 000000dc T gspInit
0702ceac 00000034 T irrstCheckSectionUpdateTime
0702cee0 00000070 T irrstScanInput
0702cf50 0000001c T irrstKeysHeld
0702cf6c 00000050 T IRRST_GetHandles
0702cfbc 00000034 T IRRST_Initialize
0702cff0 00000128 T irrstInit
0702d118 0000002c T IRRST_Shutdown
0702d144 000000a8 T irrstExit
0702d1ec 0000003c t __ctru_get_reent
0702d228 0000003c T __getThreadLocalStorage
0702d264 000000ec T __system_initSyscalls
0702d350 000000ac T utf8_to_utf16
0702d3fc 00000138 T decode_utf8
0702d534 0000005c T decode_utf16
0702d590 000000d4 T utf16_to_utf8
0702d664 000000e0 T encode_utf8
0702d744 00000054 T encode_utf16
0702d798 00000054 T rbtree_find
0702d7ec 00000014 t is_black
0702d800 000002bc T rbtree_remove
0702dabc 00000050 T rbtree_node_next
0702db0c 00000090 T rbtree_rotate
0702db9c 00000174 t do_insert
0702dd10 00000008 T rbtree_insert
0702dd18 00000010 T rbtree_init
0702dd28 T LoadCROHooked
0702dd3c T AR__ExecuteRoutine
0702dd64 t stackBak
0702dd6c T svcCustomBackdoor
0702dd74 T svcConvertVAToPA
0702dd7c T svcFlushDataCacheRange
0702dd84 T svcInvalidateEntireInstructionCache
0702dd8c T svcMapProcessMemoryEx
0702dda0 T svcUnmapProcessMemoryEx
0702dda8 T svcControlProcess
0702ddb0 T svcQueryMemory
0702dde0 T svcCreateThread
0702de00 T svcExitThread
0702de08 T svcSleepThread
0702de10 T svcSetThreadPriority
0702de18 T svcCreateEvent
0702de2c T svcSignalEvent
0702de34 T svcClearEvent
0702de3c T svcMapMemoryBlock
0702de44 T svcUnmapMemoryBlock
0702de4c T svcCreateAddressArbiter
0702de60 T svcArbitrateAddress
0702de78 T svcCloseHandle
0702de80 T svcWaitSynchronization
0702de88 T svcWaitSynchronizationN
0702deb0 T svcGetSystemTick
0702deb8 T svcGetSystemInfo
0702ded0 T svcGetProcessInfo
0702dee8 T svcConnectToPort
0702defc T svcSendSyncRequest
0702df04 T svcOpenProcess
0702df18 T svcGetProcessId
0702df2c T svcBreak
0702df34 T svcInvalidateProcessDataCache
0702df3c T svcFlushProcessDataCache
0702df44 T svcKernelSetState
0702df4c T svcQueryProcessMemory
0702df70 T __aeabi_read_tp
0702df7c 0000007c T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702dff8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
0702dff8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
0702e020 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e020 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e068 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e068 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e0a4 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
0702e0a4 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
0702e0e0 00000008 T CTRPluginFramework::MessageBox::operator()() const
0702e0e8 00000014 T CTRPluginFramework::Touch::IsDown()
0702e0fc 00000028 T CTRPluginFramework::Touch::GetPosition()
0702e124 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0702e124 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0702e1a8 00000048 T CTRPluginFramework::Task::~Task()
0702e1a8 00000048 T CTRPluginFramework::Task::~Task()
0702e1f0 00000030 T CTRPluginFramework::Task::Start() const
0702e220 00000044 T CTRPluginFramework::Task::Wait() const
0702e264 00000014 T CTRPluginFramework::Task::Status() const
0702e278 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0702e278 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0702e2a0 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
0702e320 00000048 T CTRPluginFramework::LineWriter::Flush()
0702e368 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0702e368 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0702e384 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e3f0 00000018 T CTRPluginFramework::LineWriter::Close()
0702e408 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e4cc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.22]
0702e544 0000033c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0702e880 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0702e880 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0702e8a0 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702e928 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702e928 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702ea54 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
0702ea90 00000100 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702eb90 00000084 T CTRPluginFramework::ARCode::Update()
0702ec14 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0702ec14 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0702ec38 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0702ec60 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0702ec60 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0702ed18 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702ed18 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702ed4c 00000040 T CTRPluginFramework::ARCodeContext::Update()
0702ed8c 00000090 T CTRPluginFramework::ARCodeContext::Clear()
0702ee1c 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0702eef4 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0702eef4 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0702ef14 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.67]
0702ef2c 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702f020 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.71]
0702f03c 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702f150 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702f160 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.93]
0702f1d8 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0702f1f0 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0702f244 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f288 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f2d0 000004d4 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0702f7a4 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702f7a4 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702f7e8 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0702f7e8 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0702f7fc 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0702f81c 00000178 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0702f994 00000124 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0702fab8 00000734 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
070301ec 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0703023c 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0703023c 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
070302a4 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
070302c0 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070302c0 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703030c 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
07030428 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
070304b8 00000118 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
070305d0 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.94]
07030658 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
070306b4 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
070306b4 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0703072c 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0703072c 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0703072c 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0703072c 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0703077c 00001354 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
07031ad0 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07031ad0 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07031c64 000002b4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07031f18 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
07031fa0 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031fe4 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07031ff8 0000003c W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
07032034 00000168 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0703219c 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
070321d8 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0703223c 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
07032260 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
07032288 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
07032288 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
070322b0 00000380 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
07032630 00000684 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
07032cb4 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
07032d00 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07032db8 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0703322c 000004cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
070336f8 000000f8 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
070337f0 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.44]
07033878 0000003c t RegBlock* std::__uninitialized_move_if_noexcept_a<RegBlock*, RegBlock*, std::allocator<RegBlock> >(RegBlock*, RegBlock*, RegBlock*, std::allocator<RegBlock>&) [clone .isra.48]
070338b4 00000324 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
07033bd8 0000007c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07033c54 0000006c T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
07033cc0 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
07033cf8 0000007c T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07033d74 000003cc T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
07034140 00000204 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
07034344 000000a0 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
070343e4 000000bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
070344a0 000000bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
0703455c 000000ac T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07034608 0000008c T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07034694 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
0703480c 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
07034920 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
070349c8 00000068 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
07034a30 00000090 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
07034ac0 00000160 T ARM_Disasm::Decode01(unsigned long)
07034c20 00000028 T ARM_Disasm::Decode10(unsigned long)
07034c48 0000007c T ARM_Disasm::Decode11(unsigned long)
07034cc4 00000068 T ARM_Disasm::DecodeMUL(unsigned long)
07034d2c 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
07034d7c 00000118 T ARM_Disasm::DecodeALU(unsigned long)
07034e94 000000c4 T ARM_Disasm::Decode00(unsigned long)
07034f58 00000030 T ARM_Disasm::Decode(unsigned long)
07034f88 000000d8 W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
07035060 000002e4 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07035344 000002f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
07035634 00000020 T CTRPluginFramework::Button::~Button()
07035634 00000020 T CTRPluginFramework::Button::~Button()
07035654 0000001c T CTRPluginFramework::Button::~Button()
07035670 00000040 T CTRPluginFramework::Button::operator()()
070356b0 00000148 T CTRPluginFramework::Button::Draw()
070357f8 00000154 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
0703594c 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703594c 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07035a70 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07035a70 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07035a90 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07035a90 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07035b24 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07035b24 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07035b38 00000018 T CTRPluginFramework::Button::Enable(bool)
07035b50 00000010 T CTRPluginFramework::Button::Enable()
07035b60 00000010 T CTRPluginFramework::Button::Disable()
07035b70 00000010 T CTRPluginFramework::Button::Lock()
07035b80 00000010 T CTRPluginFramework::Button::Execute()
07035b90 00000018 T CTRPluginFramework::Button::SetState(bool)
07035ba8 00000010 T CTRPluginFramework::Button::GetState() const
07035bb8 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07035c3c 00000188 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07035dc4 00000194 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07035f58 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
07035ff8 000001ec T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
070361e4 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
07036214 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07036214 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07036228 00000024 T CTRPluginFramework::UIContainer::Draw()
0703624c 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07036280 000000c4 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07036344 00000040 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07036384 00000094 T CTRPluginFramework::ComboBox::Draw()
07036418 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07036418 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07036464 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
07036480 000000a8 T CTRPluginFramework::ComboBox::operator()()
07036528 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07036528 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07036574 0000003c T CTRPluginFramework::ComboBox::Clear()
070365b0 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036600 00000084 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07036684 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07036684 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07036688 00000014 T CTRPluginFramework::FloatingButton::Draw()
0703669c 00000014 T CTRPluginFramework::FloatingButton::operator()()
070366b0 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
070366c4 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07036884 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07036884 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070368c4 00000008 W CTRPluginFramework::Drawable::operator()()
070368cc 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070368d0 000002f0 T CTRPluginFramework::TextBox::Draw()
07036bc0 00000094 T CTRPluginFramework::TextBox::TextBox()
07036bc0 00000094 T CTRPluginFramework::TextBox::TextBox()
07036c54 0000000c T CTRPluginFramework::TextBox::Open() const
07036c60 0000000c T CTRPluginFramework::TextBox::Close() const
07036c6c 00000008 T CTRPluginFramework::TextBox::IsOpen() const
07036c74 00000248 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
07036ebc 0000000c T CTRPluginFramework::TextBox::DrawConst() const
07036ec8 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
07036f60 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
07037014 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
0703706c 00000030 W unsigned char** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned char*>(unsigned char* const*, unsigned char* const*, unsigned char**)
0703709c 000000bc W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
07037158 000000bc W void std::vector<unsigned char*, std::allocator<unsigned char*> >::emplace_back<unsigned char*>(unsigned char*&&)
07037214 000001c8 T CTRPluginFramework::TextBox::_GetTextInfos()
070373dc 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
070373dc 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07037520 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07037608 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07037608 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07037780 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07037780 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070378d8 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07037950 000002b4 T CTRPluginFramework::MessageBoxImpl::_Draw()
07037c04 0000019c T CTRPluginFramework::MessageBoxImpl::operator()()
07037da0 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07037da0 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07037e60 0000009c T CTRPluginFramework::TouchKeyString::Draw()
07037efc 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07037f9c 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07037fb4 00000030 T CTRPluginFramework::TouchKeyString::operator()()
07037fe4 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07038084 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038084 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038134 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07038134 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
070381e0 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
070381e0 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07038260 00000040 T CTRPluginFramework::TouchKey::Clear()
070382a0 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070382a0 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070382c0 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
070382dc 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
070382e4 00000060 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07038344 00000060 T CTRPluginFramework::TouchKey::Draw()
070383a4 0000009c T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07038440 000000c4 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07038504 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07038504 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07038654 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07038654 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07038674 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07038690 0000007c T CTRPluginFramework::NumericTextBox::Draw()
0703870c 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
07038744 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
070387ac 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
070388a4 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
070388b4 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
070388c4 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
070388cc 0000000c T CTRPluginFramework::NumericTextBox::Clear()
070388d8 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070388d8 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07038940 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070389b4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.28]
07038a2c 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07038a2c 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07038a78 000000c0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
07038b38 00000138 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
07038c70 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
07038c98 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038cfc 00000310 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
0703900c 000000f4 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07039100 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
07039348 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
07039674 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.32]
070396fc 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.40]
07039794 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
07039810 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
070398c4 0000018c T CTRPluginFramework::SearchMenu::_Edit()
07039a50 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
07039a98 00000148 T CTRPluginFramework::SearchMenu::_Export()
07039be0 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
07039d38 000000e4 T CTRPluginFramework::SearchMenu::_ShowGame()
07039e1c 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07039e1c 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07039ed0 00000548 T CTRPluginFramework::SearchMenu::Draw()
0703a418 00000230 T CTRPluginFramework::SearchMenu::Update()
0703a648 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703ab58 000000e4 T CTRPluginFramework::Converter::Converter()
0703ab58 000000e4 T CTRPluginFramework::Converter::Converter()
0703ac3c 00000010 T CTRPluginFramework::Converter::Instance()
0703ac4c 00000108 T CTRPluginFramework::Converter::_Draw()
0703ad54 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703ad54 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703ad68 0000021c T CTRPluginFramework::Converter::operator()(unsigned long)
0703af84 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703b408 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703b890 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703bd0c 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c334 0000090c T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703cc40 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d550 000008d4 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703de24 00000c40 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703ea64 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703f308 0000093c T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703fc44 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07040568 00000d9c T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07041304 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07041f68 00000744 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070426ac 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042ab4 000006e0 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043194 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07043424 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070436cc 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704395c 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07043990 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07043cb4 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07043cd8 00000004 t addrMapNodeDestructor(rbtree_node*)
07043cdc 000000d8 T mappableAlloc
07043db4 00000050 T mappableFree
07043e04 00000090 T __system_allocateHeaps
07043e94 0000005c t getSysTime
07043ef0 000000fc T __libctru_gtod
07043fec 00000008 T envGetHandle
07043ff4 00000004 T envDestroyHandles
07043ff8 00000020 T __libctru_exit
07044018 00000020 T __appExit
07044038 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07044038 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07044064 00000018 T CTRPluginFramework::LineReader::~LineReader()
07044064 00000018 T CTRPluginFramework::LineReader::~LineReader()
0704407c 00000108 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07044184 00000060 t CTRPluginFramework::Hook* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook> >(CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook>&) [clone .isra.55]
070441e4 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
070441ec 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
07044210 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
07044234 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
07044258 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07044280 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
070442a8 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
070442d0 000000d0 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
070443a0 00001e74 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07046214 00000070 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
07046284 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
070462a4 00000008 T __cxa_pure_virtual
070462ac 00000010 T __aeabi_atexit
070462bc 00000004 T operator new[](unsigned int)
070462c0 00000058 T operator new(unsigned int)
07046318 00000034 T __cxxabiv1::__terminate(void (*)())
0704634c 00000018 T std::terminate()
07046364 0000000c T __cxxabiv1::__unexpected(void (*)())
07046370 00000018 T std::unexpected()
07046388 00000014 T std::get_terminate()
0704639c 00000014 T std::get_unexpected()
070463b0 0000000c T std::bad_alloc::what() const
070463bc 00000020 T std::bad_alloc::~bad_alloc()
070463bc 00000020 T std::bad_alloc::~bad_alloc()
070463dc 0000002c T std::bad_alloc::~bad_alloc()
07046408 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
07046570 00000068 t base_of_encoded_value(unsigned char, _Unwind_Context*)
070465d8 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
070466b0 000006fc T __gxx_personality_v0
07046dac 00000004 T operator delete[](void*)
07046db0 00000014 T std::get_new_handler()
07046dc4 0000005c T __cxa_guard_acquire
07046e20 0000000c T __cxa_guard_release
07046e2c 00000004 T std::exception::~exception()
07046e2c 00000004 T std::exception::~exception()
07046e30 00000004 T std::bad_exception::~bad_exception()
07046e30 00000004 T std::bad_exception::~bad_exception()
07046e34 0000000c T transaction clone for std::exception::what() const
07046e34 0000000c T std::exception::what() const
07046e40 0000000c T transaction clone for std::bad_exception::what() const
07046e40 0000000c T std::bad_exception::what() const
07046e4c 00000018 T std::bad_exception::~bad_exception()
07046e64 00000004 T operator delete(void*, unsigned int)
07046e68 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
07046ec8 00000070 T __cxa_init_primary_exception
07046f38 00000054 T __cxa_throw
07046f8c 000000b0 T __cxa_rethrow
0704703c 000000d0 T __cxa_begin_catch
0704710c 000000e0 T __cxa_end_catch
070471ec 000000ec t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
070472d8 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
0704738c 00000044 T __cxa_allocate_exception
070473d0 00000030 T __cxa_free_exception
07047400 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
07047440 00000004 T operator delete(void*)
07047444 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07047444 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07047464 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07047490 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
070474fc 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
070475d8 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704761c 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07047634 00000014 T std::__detail::_List_node_base::_M_unhook()
07047648 00000080 t std::local_Rb_tree_decrement(std::_Rb_tree_node_base*)
070476c8 00000004 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
070476cc 0000027c T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
07047948 0000002c T std::__throw_bad_alloc()
07047974 00000040 T std::__throw_logic_error(char const*)
070479b4 00000040 T std::__throw_invalid_argument(char const*)
070479f4 00000040 T std::__throw_length_error(char const*)
07047a34 00000040 T std::__throw_out_of_range(char const*)
07047a74 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
07047af0 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
07047b44 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
07047b58 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
07047b7c 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
07047ba0 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07047c58 0000010c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07047d64 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07047de0 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07047de0 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07047e4c 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
07047e4c 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
07047e70 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07047f00 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07048010 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07048080 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
070480ec 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
07048130 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
07048148 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
0704826c 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char)
070482a4 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
0704852c 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
07048564 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070485b0 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
07048610 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
070486a4 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070486b4 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070486c4 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
070486f0 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
07048738 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
07048780 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
07048824 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
07048834 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
07048898 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
070488c8 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
07048914 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
070489c4 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070489c4 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070489f4 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
07048a6c T __cxa_end_cleanup
07048a7c 00000138 T __cxa_type_match
07048bb4 000000b4 T __cxa_begin_cleanup
07048c68 000000b4 T __gnu_end_cleanup
07048d1c 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07048d8c 0000002c T __cxa_call_terminate
07048db8 00000158 T __cxa_call_unexpected
07048f10 0000000c T __cxa_get_globals_fast
07048f1c 0000000c T __cxa_get_globals
07048f28 00000004 T std::type_info::~type_info()
07048f28 00000004 T std::type_info::~type_info()
07048f2c 00000008 T std::type_info::__is_pointer_p() const
07048f2c 00000008 T std::type_info::__is_function_p() const
07048f34 0000004c T std::type_info::operator==(std::type_info const&) const
07048f80 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07048fdc 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07048ff0 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07048ff0 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07049010 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0704903c 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
070490a4 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
070490d0 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07049114 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049114 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049134 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049160 00000008 T std::logic_error::what() const
07049168 00000064 T std::logic_error::~logic_error()
07049168 00000064 T std::logic_error::~logic_error()
070491cc 0000001c T std::logic_error::~logic_error()
070491e8 00000020 T std::invalid_argument::~invalid_argument()
070491e8 00000020 T std::invalid_argument::~invalid_argument()
07049208 00000028 T std::invalid_argument::~invalid_argument()
07049230 00000020 T std::length_error::~length_error()
07049230 00000020 T std::length_error::~length_error()
07049250 00000028 T std::length_error::~length_error()
07049278 00000020 T std::out_of_range::~out_of_range()
07049278 00000020 T std::out_of_range::~out_of_range()
07049298 00000028 T std::out_of_range::~out_of_range()
070492c0 00000038 T std::logic_error::logic_error(char const*)
070492c0 00000038 T std::logic_error::logic_error(char const*)
070492f8 00000020 T std::invalid_argument::invalid_argument(char const*)
070492f8 00000020 T std::invalid_argument::invalid_argument(char const*)
07049318 00000020 T std::length_error::length_error(char const*)
07049318 00000020 T std::length_error::length_error(char const*)
07049338 00000020 T std::out_of_range::out_of_range(char const*)
07049338 00000020 T std::out_of_range::out_of_range(char const*)
07049358 0000006c T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
070493c4 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
07049444 000000f8 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
0704953c 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
070495c0 00000070 t char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.20]
070495c0 00000070 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.23]
07049630 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
07049634 00000030 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
07049664 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
07049664 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
070496a8 0000015c T ceil
07049804 000000b4 T ceilf
070498b8 0000016c T floor
07049a24 00000088 T roundf
07049ab0 00000020 T log2
07049ad0 00000164 T log
07049c38 000002dc T __ieee754_log
07049f14 00000008 T matherr
07049f20 00000010 T nan
07049f30 0000002c T __aeabi_f2lz
07049f30 0000002c T __fixsfdi
07049f5c 0000002c T __aeabi_d2lz
07049f5c 0000002c T __fixdfdi
07049f88 00000040 T __aeabi_f2ulz
07049f88 00000040 T __fixunssfdi
07049fc8 00000040 T __aeabi_d2ulz
07049fc8 00000040 T __fixunsdfdi
0704a008 00000128 T __udivmoddi4
0704a130 00000018 t selfrel_offset31
0704a148 00000094 t search_EIT_table
0704a1dc 00000040 t __gnu_unwind_get_pr_addr
0704a21c 0000011c t get_eit_entry
0704a338 00000088 t restore_non_core_regs
0704a3c0 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
0704a3d4 00000004 t _Unwind_DebugHook
0704a3d8 00000064 t unwind_phase2
0704a43c 0000014c t unwind_phase2_forced
0704a588 000000a4 T __gnu_Unwind_RaiseException
0704a62c 00000024 T __gnu_Unwind_ForcedUnwind
0704a650 00000074 T __gnu_Unwind_Resume
0704a6c4 00000020 T __gnu_Unwind_Resume_or_Rethrow
0704a6e4 00000004 T _Unwind_Complete
0704a6e8 00000018 T _Unwind_DeleteException
0704a700 00000068 T _Unwind_VRS_Get
0704a768 0000002c t _Unwind_GetGR
0704a794 00000068 T _Unwind_VRS_Set
0704a7fc 0000002c t _Unwind_SetGR
0704a828 000000c0 T __gnu_Unwind_Backtrace
0704a8e8 00000448 t __gnu_unwind_pr_common
0704ad30 00000008 T __aeabi_unwind_cpp_pr0
0704ad38 00000008 W __aeabi_unwind_cpp_pr1
0704ad40 00000008 W __aeabi_unwind_cpp_pr2
0704ad48 000003dc T _Unwind_VRS_Pop
0704b124 00000060 t next_unwind_byte
0704b184 0000002c t _Unwind_GetGR.constprop.0
0704b1b0 00000004 t unwind_UCB_from_context
0704b1b4 000003c8 T __gnu_unwind_execute
0704b57c 00000048 T __gnu_unwind_frame
0704b5c4 00000010 T _Unwind_GetRegionStart
0704b5d4 0000001c T _Unwind_GetLanguageSpecificData
0704b5f0 00000008 T _Unwind_GetDataRelBase
0704b5f8 00000008 T _Unwind_GetTextRelBase
0704b600 00000010 T ctime
0704b610 00000014 T __cxa_atexit
0704b624 0000000c T __errno
0704b630 0000007c T __libc_init_array
0704b6ac 0000001c T isalnum
0704b6c8 0000001c T isspace
0704b6e4 0000001c T isxdigit
0704b700 0000001c T localtime
0704b71c 00000378 T localtime_r
0704ba94 00000024 T __locale_mb_cur_max
0704bab8 00000008 T __locale_ctype_ptr_l
0704bac0 00000024 T __locale_ctype_ptr
0704bae4 00000020 T memalign
0704bb04 0000014c T _memalign_r
0704bc50 00000018 T malloc
0704bc68 00000018 T free
0704bc80 0000078c T _malloc_r
0704c40c 000002fc T __utf8_mbtowc
0704c708 00000100 T memchr
0704c808 000000fc T memcmp
0704c904 00000118 T memcpy
0704ca1c 00000154 T memmove
0704cb70 00000114 T memset
0704cc84 0000000c T __malloc_lock
0704cc90 0000000c T __malloc_unlock
0704cc9c 000000d4 T snprintf
0704cd70 00000064 T sprintf
0704cdd4 00000008 T __seofread
0704cddc 00000070 T strcat
0704ce4c 000000f0 T strcpy
0704cf3c 00000154 t iso_year_adjust
0704d090 00001158 t __strftime
0704e1e8 00000050 T strftime
0704e238 0000005c T strlen
0704e294 0000010c T strncmp
0704e3a0 000000e0 T strncpy
0704e480 00000054 t sulp
0704e4d8 00001404 T _strtod_l
0704f8e0 000000b8 T strtof
0704f998 000001b8 t _strtol_l.isra.0
0704fb50 00000050 T _strtol_r
0704fba0 00000260 t _strtoull_l.isra.0
0704fe00 00000050 T _strtoull_r
0704fe50 000001cc t _strtoul_l.isra.0
0705001c 00000050 T _strtoul_r
0705006c 00000054 T strtoul
070500c0 00000630 t get_arg
070506f0 00003640 T _svfprintf_r
07053d30 0000003c T time
07053d6c 00000224 T __tzcalc_limits
07053f90 0000000c T __tz_lock
07053f9c 0000000c T __tz_unlock
07053fa8 00000010 T _tzset_unlocked
07053fb8 0000046c T _tzset_unlocked_r
07054424 000000a4 T _vsnprintf_r
070544c8 00000038 T vsnprintf
07054500 000000a0 T _wcrtomb_r
070545a0 00000020 T _wcsrtombs_r
070545c0 000000e8 T __utf8_wctomb
070546a8 0000000c T abs
070546b4 0000001c T asctime
070546d0 00000078 T asctime_r
07054748 000000f4 T __register_exitproc
0705483c 000001c8 t quorem
07054a08 000012e4 T _dtoa_r
07055cec 000000f8 T _malloc_trim_r
07055de4 000002e4 T _free_r
070560c8 000000ec t rshift
070561b4 00000828 T __gethex
070569dc 00000060 T __match
07056a3c 00000254 T __hexnan
07056c90 000000c8 T _findenv_r
07056d58 00000018 T _getenv_r
07056d70 0000000c T __gettzinfo
07056d7c 0000027c T gmtime_r
07056ff8 0000000c T labs
07057004 00000008 T __localeconv_l
0705700c 00000024 T _localeconv_r
07057030 00000088 T _Balloc
070570b8 0000001c T _Bfree
070570d4 000000e0 T __multadd
070571b4 000000e4 T __s2b
07057298 00000058 T __hi0bits
070572f0 0000009c T __lo0bits
0705738c 00000020 T __i2b
070573ac 000001c4 T __multiply
07057570 00000100 T __pow5mult
07057670 000000f4 T __lshift
07057764 0000005c T __mcmp
070577c0 00000168 T __mdiff
07057928 00000074 T __ulp
0705799c 000000d4 T __b2d
07057a70 00000100 T __d2b
07057b70 00000084 T __ratio
07057bf4 0000006c T __copybits
07057c60 00000078 T __any_on
07057cd8 0000000c T nanf
07057ce8 000000a8 T frexp
07057d90 00000064 T siprintf
07057df4 00000074 T siscanf
07057e68 000000d4 T sniprintf
07057f3c 00000630 t get_arg
0705856c 00000188 T __ssprint_r
070586f4 0000247c T _svfiprintf_r
0705ab70 00000048 t get_arg
0705abb8 000000e4 T _sungetc_r
0705ac9c 0000006c T __ssrefill_r
0705ad08 000000c8 T _sfread_r
0705add0 000022a8 T __ssvfiscanf_r
0705d078 000000a4 T __submore
0705d11c 00000184 T _wcsnrtombs_l
0705d2a0 00000064 T _wcsnrtombs_r
0705d304 00000094 T _calloc_r
0705d398 0000000c T __env_lock
0705d3a4 0000000c T __env_unlock
0705d3b0 00000074 T iswspace
0705d424 000001e0 t __jp2uc
0705d604 000000c4 T _jp2uc
0705d6c8 000000b4 T _mbrtowc_r
0705d77c 00000020 T realloc
0705d79c 000004bc T _realloc_r
0705dc58 000000cc T __sccl
0705dd24 00000260 t _strtoll_l.isra.0
0705df84 00000050 T _strtoll_r
0705dfd4 0000002c T _gettimeofday_r
0705e000 00000070 T _sbrk_r
0705e070 00000018 T __libc_lock_acquire
0705e088 00000018 T __libc_lock_release
0705e0a0 00000018 T __libc_lock_acquire_recursive
0705e0b8 00000018 T __libc_lock_release_recursive
0705e0d0 00000028 T __getreent
0705e0f8 T _fini
0705e110 00000024 r CSWTCH.150
0705e134 R customBreak
0705e178 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0705e1b8 00000058 r CTRPluginFramework::g_OSDPattern
0705e240 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0705e254 00000038 r CTRPluginFramework::stable
0705e28c 00000038 r CTRPluginFramework::ktable
0705e2c4 00000048 r CTRPluginFramework::g_ctrpf
0705e30c 00000030 r CTRPluginFramework::g_byme
0705e368 00000018 R vtable for CTRPluginFramework::HexEditor::ByteView
0705e380 00000018 R vtable for CTRPluginFramework::HexEditor::IntegerView
0705e398 00000018 R vtable for CTRPluginFramework::HexEditor::FloatView
0705e3b0 00000018 R vtable for CTRPluginFramework::HexEditor::AsmView
0705e3c8 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0705e3d0 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0705e3ec 00000038 R vtable for CTRPluginFramework::Search
0705e424 00000038 R vtable for CTRPluginFramework::Search32
0705e45c 00000005 r CSWTCH.74
0705e464 00000004 R Search15_array_length
0705e468 00000384 r Search15_array
0705e7ec 00000004 R UnCheckedCheckbox_array_length
0705e7f0 00000384 r UnCheckedCheckbox_array
0705eb74 00000004 R Unsplash15_array_length
0705eb78 00000384 r Unsplash15_array
0705eefc 00000004 R Plus25_array_length
0705ef00 000009c4 r Plus25_array
0705f8c4 00000004 R GameControllerFilled25_array_length
0705f8c8 000009c4 r GameControllerFilled25_array
0706028c 00000004 R About15_array_length
07060290 00000384 r About15_array
07060614 00000004 R Trash25_array_length
07060618 000009c4 r Trash25_array
07060fdc 00000004 R Cut25_array_length
07060fe0 000009c4 r Cut25_array
070619a4 00000004 R CloseWindow20_array_length
070619a8 00000640 r CloseWindow20_array
07061fe8 00000004 R AddFavoriteFilled25_array_length
07061fec 000009c4 r AddFavoriteFilled25_array
070629b0 00000004 R ClearSymbolFilled15_array_length
070629b4 00000384 r ClearSymbolFilled15_array
07062d38 00000004 R ClipboardFilled25_array_length
07062d3c 000009c4 r ClipboardFilled25_array
07063700 00000004 R CheckedCheckbox_array_length
07063704 00000384 r CheckedCheckbox_array
07063a88 00000004 R CutFilled25_array_length
07063a8c 000009c4 r CutFilled25_array
07064450 00000004 R CapsLockOn15_array_length
07064454 00000384 r CapsLockOn15_array
070647d8 00000004 R TrashFilled25_array_length
070647dc 000009c4 r TrashFilled25_array
070651a0 00000004 R RAM15_array_length
070651a4 00000384 r RAM15_array
07065528 00000004 R More15_array_length
0706552c 00000384 r More15_array
070658b0 00000004 R InfoFilled25_array_length
070658b4 000009c4 r InfoFilled25_array
07066278 00000004 R CloseWindowFilled20_array_length
0706627c 00000640 r CloseWindowFilled20_array
070668bc 00000004 R HandCursor15_array_length
070668c0 00000384 r HandCursor15_array
07066c44 00000004 R EnterKey15_array_length
07066c48 00000384 r EnterKey15_array
07066fcc 00000004 R Duplicate25_array_length
07066fd0 000009c4 r Duplicate25_array
07067994 00000004 R Settings15_array_length
07067998 00000384 r Settings15_array
07067d1c 00000004 R File15_array_length
07067d20 00000384 r File15_array
070680a4 00000004 R AddFavorite25_array_length
070680a8 000009c4 r AddFavorite25_array
07068a6c 00000004 R Edit25_array_length
07068a70 000009c4 r Edit25_array
07069434 00000004 R DuplicateFilled25_array_length
07069438 000009c4 r DuplicateFilled25_array
07069dfc 00000004 R Save25_array_length
07069e00 000009c4 r Save25_array
0706a7c4 00000004 R Clipboard25_array_length
0706a7c8 000009c4 r Clipboard25_array
0706b18c 00000004 R Info25_array_length
0706b190 000009c4 r Info25_array
0706bb54 00000004 R EditFilled25_array_length
0706bb58 000009c4 r EditFilled25_array
0706c51c 00000004 R KeyboardFilled25_array_length
0706c520 000009c4 r KeyboardFilled25_array
0706cee4 00000004 R PlusFilled25_array_length
0706cee8 000009c4 r PlusFilled25_array
0706d8ac 00000004 R Shutdown15_array_length
0706d8b0 00000384 r Shutdown15_array
0706dc34 00000004 R ClearSymbol15_array_length
0706dc38 00000384 r ClearSymbol15_array
0706dfbc 00000004 R Maintenance15_array_length
0706dfc0 00000384 r Maintenance15_array
0706e344 00000004 R Controller15_array_length
0706e348 00000384 r Controller15_array
0706e6cc 00000004 R Grid15_array_length
0706e6d0 00000384 r Grid15_array
0706ea54 00000004 R Keyboard25_array_length
0706ea58 000009c4 r Keyboard25_array
0706f41c 00000004 R CapsLockOnFilled15_array_length
0706f420 00000384 r CapsLockOnFilled15_array
0706f7a4 00000004 R UserManualFilled15_array_length
0706f7a8 00000384 r UserManualFilled15_array
0706fb2c 00000004 R Rocket40_array_length
0706fb30 00001900 r Rocket40_array
07071430 00000004 R Star15_array_length
07071434 00000384 r Star15_array
070717b8 00000004 R EnterKeyFilled15_array_length
070717bc 00000384 r EnterKeyFilled15_array
07071b40 00000004 R GameController25_array_length
07071b44 000009c4 r GameController25_array
07072508 00000004 R FolderFilled_array_length
0707250c 00000384 r FolderFilled_array
07072890 00000004 R Restart15_array_length
07072894 00000384 r Restart15_array
07072c48 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
07072c64 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
07072c70 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
07072cf0 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
07072d04 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
07072d0c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
07072d14 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07072d1c 00000040 r RegNames
07072d5c 00000040 r cond_names
07072d9c 00000010 r shift_names
07072dac 0000001c R vtable for CTRPluginFramework::Button
07072dc8 00000a00 r font
070737c8 0000001c R vtable for CTRPluginFramework::ComboBox
070737e4 0000001c R vtable for CTRPluginFramework::FloatingButton
07073800 0000001c R vtable for CTRPluginFramework::TextBox
0707381c 0000001c R vtable for CTRPluginFramework::TouchKey
07073838 0000001c R vtable for CTRPluginFramework::NumericTextBox
07074cec 00000014 V vtable for CTRPluginFramework::MenuItem
070753bc 0000001c V vtable for CTRPluginFramework::MenuEntryTools
07076778 0000000c R typeinfo for std::bad_alloc
07076784 0000000d R typeinfo name for std::bad_alloc
07076794 00000014 R vtable for std::bad_alloc
070767cc 00000008 R typeinfo for __cxxabiv1::__forced_unwind
070767d4 00000008 R typeinfo for __cxxabiv1::__foreign_exception
070767dc 0000000c R typeinfo for std::bad_exception
070767e8 00000008 R typeinfo for std::exception
070767f0 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
07076810 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
07076834 00000012 R typeinfo name for std::bad_exception
07076848 0000000d R typeinfo name for std::exception
07076858 00000014 R vtable for std::bad_exception
0707686c 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
07076878 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
070768a0 0000002c R vtable for __cxxabiv1::__si_class_type_info
070769fc 00000008 R typeinfo for std::type_info
07076a04 0000000d R typeinfo name for std::type_info
07076a14 0000000c R typeinfo for __cxxabiv1::__class_type_info
07076a20 00000022 R typeinfo name for __cxxabiv1::__class_type_info
07076a44 0000002c R vtable for __cxxabiv1::__class_type_info
07076a70 0000000c R typeinfo for __gnu_cxx::recursive_init_error
07076a7c 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
07076aa0 00000014 R vtable for __gnu_cxx::recursive_init_error
07076ab4 0000000c R typeinfo for std::logic_error
07076ac0 0000000c R typeinfo for std::length_error
07076acc 0000000c R typeinfo for std::out_of_range
07076ad8 0000000c R typeinfo for std::invalid_argument
07076ae4 00000010 R typeinfo name for std::logic_error
07076af4 00000011 R typeinfo name for std::length_error
07076b08 00000011 R typeinfo name for std::out_of_range
07076b1c 00000015 R typeinfo name for std::invalid_argument
07076b34 00000014 R vtable for std::logic_error
07076b48 00000014 R vtable for std::length_error
07076b5c 00000014 R vtable for std::out_of_range
07076b70 00000014 R vtable for std::invalid_argument
07076c44 00000004 R _global_impure_ptr
07076c90 00000060 R __month_lengths
07076d7c 00000014 r fpi.7553
07076d90 00000014 r fpinan.7589
07076da8 00000028 r tinytens
07076e0c 00000010 r blanks.8705
07076e1c 00000010 r zeroes.8706
07076e2c 000000fc R _C_time_locale
070770f4 00000015 r day_name.6246
0707710c 00000024 r mon_name.6247
07077130 00000101 R _ctype_
07077248 00000100 R __hexdig
07077348 00000028 R __mprec_bigtens
07077370 000000c8 R __mprec_tens
07077438 0000000c r p05.7473
07077444 0000006c R __action_table
070774b0 00000100 R __chclass
070775b0 0000006c R __state_table
0707761c 00000010 r blanks.8684
0707762c 00000010 r zeroes.8685
0707763c 00000022 r basefix.8255
07077674 000000bc r a1
07077730 000000bc r a2
070777ec 0000005b r a3
07077848 00000070 r a6
070778b8 000000a2 r a7
0707795c 00000040 r a8
0707799c 0000172a r b02cf
070790c8 00001a7c r d02f4
0707ac64 R __exidx_start
0707ae84 R __exidx_end
0707ae84 00000008 D fsCheckPermsPat
0707ae8c 00000010 D userFsTryOpenFilePat1
0707ae9c 00000010 D userFsTryOpenFilePat2
0707aeac 0000000b D fsMountArchivePat1
0707aeb7 00000010 D fsMountArchivePat2
0707aec7 00000008 D fsRegArchivePat
0707aecf 00000008 D openArchivePat
0707aed7 00000008 D formatSavePat
0707aedf 00000004 D fsSetThisSecValPat
0707aee3 00000004 D fsObsSetThisSecValPat
0707aee7 00000004 D fsSetSecValPat
0707aeec 00000004 d CTRPluginFramework::fsRegArchiveCallback(unsigned char*, unsigned long*, unsigned long, unsigned long)::isFisrt
0707aef0 00000024 D CTRPluginFramework::fileOperationFuncs
0707af14 00000001 D CTRPluginFramework::g_keepRunning
0707af18 00000004 D CTRPluginFramework::FwkSettings::Header
0707af1c 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
0707af20 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
0707af24 00000004 D CTRPluginFramework::Preferences::ScreenshotKeys
0707af28 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
0707af2c 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
0707af30 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
0707af34 00000004 D CTRPluginFramework::Screenshot::Screens
0707af38 00000004 D CTRPluginFramework::Screenshot::Hotkeys
0707af3c 00000001 D CTRPluginFramework::SystemImpl::Language
0707af3d 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
0707af40 00000004 D Search15
0707af44 00000004 D UnCheckedCheckbox
0707af48 00000004 D Unsplash15
0707af4c 00000004 D Plus25
0707af50 00000004 D GameControllerFilled25
0707af54 00000004 D About15
0707af58 00000004 D Trash25
0707af5c 00000004 D Cut25
0707af60 00000004 D CloseWindow20
0707af64 00000004 D AddFavoriteFilled25
0707af68 00000004 D ClearSymbolFilled15
0707af6c 00000004 D ClipboardFilled25
0707af70 00000004 D CheckedCheckbox
0707af74 00000004 D CutFilled25
0707af78 00000004 D CapsLockOn15
0707af7c 00000004 D TrashFilled25
0707af80 00000004 D RAM15
0707af84 00000004 D More15
0707af88 00000004 D InfoFilled25
0707af8c 00000004 D CloseWindowFilled20
0707af90 00000004 D HandCursor15
0707af94 00000004 D EnterKey15
0707af98 00000004 D Duplicate25
0707af9c 00000004 D Settings15
0707afa0 00000004 D File15
0707afa4 00000004 D AddFavorite25
0707afa8 00000004 D Edit25
0707afac 00000004 D DuplicateFilled25
0707afb0 00000004 D Save25
0707afb4 00000004 D Clipboard25
0707afb8 00000004 D Info25
0707afbc 00000004 D EditFilled25
0707afc0 00000004 D KeyboardFilled25
0707afc4 00000004 D PlusFilled25
0707afc8 00000004 D Shutdown15
0707afcc 00000004 D ClearSymbol15
0707afd0 00000004 D Maintenance15
0707afd4 00000004 D Controller15
0707afd8 00000004 D Grid15
0707afdc 00000004 D Keyboard25
0707afe0 00000004 D CapsLockOnFilled15
0707afe4 00000004 D UserManualFilled15
0707afe8 00000004 D Rocket40
0707afec 00000004 D Star15
0707aff0 00000004 D EnterKeyFilled15
0707aff4 00000004 D GameController25
0707aff8 00000004 D FolderFilled
0707affc 00000004 D Restart15
0707b000 000001f4 D opcode_names
0707b1f4 D __dso_handle
0707b1f8 00000004 D __cxxabiv1::__terminate_handler
0707b1fc 00000004 D __cxxabiv1::__unexpected_handler
0707b200 00000001 D __fdlib_version
0707b204 00000004 D _impure_ptr
0707b208 00000460 d impure_data
0707b668 0000016c D __global_locale
0707b7d4 00000408 D __malloc_av_
0707bbdc 00000004 D __malloc_sbrk_base
0707bbe0 00000004 D __malloc_trim_threshold
0707bbe4 0000000c d __malloc_recursive_mutex
0707bbf0 00000004 d __tz_mutex
0707bbf4 00000008 D _tzname
0707bbfc 0000000c D __atexit_recursive_mutex
0707bc08 00000058 d tzinfo
0707bc60 00000004 D environ
0707bc64 0000000c d __env_recursive_mutex
0707bc70 D __TMC_END__
0707bc84 d _GLOBAL_OFFSET_TABLE_
0707bc90 D __tdata_lma
0707bc9c t __frame_dummy_init_array_entry
0707bc9c T __init_array_start
0707bc9c B __preinit_array_end
0707bc9c B __preinit_array_start
0707bc9c D __tdata_lma_end
0707bcfc t __do_global_dtors_aux_fini_array_entry
0707bcfc T __init_array_end
0707bd00 B __c_bss_start
0707bd00 00000001 B CTRPluginFramework::ENABLE_DEBUG
0707bd04 00000024 B CTRPluginFramework::fileOperations
0707bd28 0000072c B CTRPluginFramework::fileOpHooks
0707c454 00000018 b CTRPluginFramework::about
0707c46c 00000004 B CTRPluginFramework::fsMountArchive
0707c470 000000cc B CTRPluginFramework::regArchiveHook
0707c53c 000000cc B CTRPluginFramework::openArchiveHook
0707c608 000000cc B CTRPluginFramework::formatSaveHook
0707c6d4 000000cc B CTRPluginFramework::fsSetThisSecValHook
0707c7a0 000000cc B CTRPluginFramework::fsObsSetThisSecValHook
0707c86c 000000cc B CTRPluginFramework::fsSetSecValHook
0707c938 00000011 B CTRPluginFramework::g_ProcessTID
0707c949 00000001 B CTRPluginFramework::canSaveRedirect
0707c950 00000004 B CTRPluginFramework::OnionSave::debugFile
0707c954 00000004 B CTRPluginFramework::debugLock
0707c958 00000064 B CTRPluginFramework::OnionSave::savePath
0707c9bc 00000650 B CTRPluginFramework::OnionSave::settings
0707d010 00000648 B CTRPluginFramework::OnionSave::save
0707d658 00000064 B CTRPluginFramework::OnionSave::romPath
0707d6bc 00000064 B CTRPluginFramework::OnionSave::dataPath
0707d720 00000001 B CTRPluginFramework::OnionSave::needsReboot
0707d724 00000004 B CTRPluginFramework::regLock
0707d728 00000004 B CTRPluginFramework::openLock
0707d72c 00000004 B currentPid
0707d730 00000004 B hCurrentProcess
0707d738 00000004 b g_onLoadCroLock
0707d73c 00000004 B CTRPluginFramework::g_keepEvent
0707d740 00000008 b CTRPluginFramework::g_mainThread
0707d748 00000004 B CTRPluginFramework::g_continueGameEvent
0707d74c 00000004 B CTRPluginFramework::g_keepThreadHandle
0707d750 00000018 b g_onLoadCroHook
0707d768 00000008 B CTRPluginFramework::_sdmcArchive
0707d770 00000004 B g_gspEventThreadPriority
0707d774 00000004 B CTRPluginFramework::g_resumeEvent
0707d778 00001000 b CTRPluginFramework::keepThreadStack
0707e778 00000004 B CTRPluginFramework::Color::Black
0707e77c 00000004 B CTRPluginFramework::Color::White
0707e780 00000004 B CTRPluginFramework::Color::Red
0707e784 00000004 B CTRPluginFramework::Color::Lime
0707e788 00000004 B CTRPluginFramework::Color::Blue
0707e78c 00000004 B CTRPluginFramework::Color::Yellow
0707e790 00000004 B CTRPluginFramework::Color::Cyan
0707e794 00000004 B CTRPluginFramework::Color::Magenta
0707e798 00000004 B CTRPluginFramework::Color::Silver
0707e79c 00000004 B CTRPluginFramework::Color::Gray
0707e7a0 00000004 B CTRPluginFramework::Color::Maroon
0707e7a4 00000004 B CTRPluginFramework::Color::Olive
0707e7a8 00000004 B CTRPluginFramework::Color::Green
0707e7ac 00000004 B CTRPluginFramework::Color::Purple
0707e7b0 00000004 B CTRPluginFramework::Color::Teal
0707e7b4 00000004 B CTRPluginFramework::Color::Navy
0707e7b8 00000004 B CTRPluginFramework::Color::BlackGrey
0707e7bc 00000004 B CTRPluginFramework::Color::Brown
0707e7c0 00000004 B CTRPluginFramework::Color::DarkGrey
0707e7c4 00000004 B CTRPluginFramework::Color::DeepSkyBlue
0707e7c8 00000004 B CTRPluginFramework::Color::DimGrey
0707e7cc 00000004 B CTRPluginFramework::Color::DodgerBlue
0707e7d0 00000004 B CTRPluginFramework::Color::Gainsboro
0707e7d4 00000004 B CTRPluginFramework::Color::ForestGreen
0707e7d8 00000004 B CTRPluginFramework::Color::LimeGreen
0707e7dc 00000004 B CTRPluginFramework::Color::Orange
0707e7e0 00000004 B CTRPluginFramework::Color::SkyBlue
0707e7e4 00000004 B CTRPluginFramework::Color::Turquoise
0707e7e8 00000004 b CTRPluginFramework::g_runningInstance
0707e7f0 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0707e7f8 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0707e800 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0707e808 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0707e80c 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0707e80e 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0707e810 00000180 b CTRPluginFramework::g_keyName
0707e990 00000004 B CTRPluginFramework::__fileHandle
0707e998 00000008 B CTRPluginFramework::Time::Zero
0707e9a0 00000004 B CTRPluginFramework::System::OnAbort
0707e9a4 00000018 b __threads
0707e9bc 0000000c b __mutex
0707e9c8 00000004 B CTRPluginFramework::Controller::_keysDown
0707e9cc 00000004 B CTRPluginFramework::Controller::_keysHeld
0707e9d0 00000004 B CTRPluginFramework::Controller::_keysReleased
0707e9d4 000009c4 b CTRPluginFramework::g_rng
0707f398 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
0707f39c 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0707f3a0 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0707f3a4 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
0707f3a5 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
0707f3a6 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
0707f3a7 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
0707f3a8 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
0707f3a9 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
0707f3aa 00000001 B CTRPluginFramework::Preferences::ShowTopFps
0707f3ab 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
0707f3ac 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0707f3ad 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0707f3b0 00000070 B CTRPluginFramework::Preferences::Settings
0707f420 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
0707f438 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
0707f450 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
0707f468 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
0707f469 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
0707f46a 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
0707f46c 00000004 b CTRPluginFramework::defaultSysFont
0707f470 00000004 B CTRPluginFramework::g_fontAllocated
0707f474 00000004 b CTRPluginFramework::tileData
0707f478 00000004 b CTRPluginFramework::glyph
0707f47c 0000000c B CTRPluginFramework::Font::_mutex
0707f488 00000004 B CTRPluginFramework::g_glyphAllocated
0707f48c 00000028 B CTRPluginFramework::Window::BottomWindow
0707f4b4 00000028 B CTRPluginFramework::Window::TopWindow
0707f4dc 00000004 B CTRPluginFramework::RendererPriv::g_customColor
0707f4e0 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0707f4e4 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0707f4e8 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0707f4ec 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0707f4f8 0000000c B CTRPluginFramework::OSDImpl::RecLock
0707f504 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
0707f510 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0707f528 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0707f540 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0707f544 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0707f54c 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0707f550 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0707f558 00000018 B CTRPluginFramework::OSDImpl::OSDHook
0707f570 00000010 b CTRPluginFramework::InstallOSD()::returnCode
0707f580 00000004 B CTRPluginFramework::OSDImpl::HookReturn
0707f584 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0707f58c 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0707f5b0 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0707f5bc 00000004 b CTRPluginFramework::g_second
0707f5c0 00000010 b CTRPluginFramework::g_fpsClock
0707f5d0 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0707f5d4 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0707f5d5 00000001 B CTRPluginFramework::OSDImpl::MessColors
0707f5d8 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0707f5dc 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0707f5e0 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
0707f5e8 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
0707f608 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0707f610 00000004 b CTRPluginFramework::g_ctrpfString
0707f614 00000004 b CTRPluginFramework::g_bymeString
0707f618 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0707f620 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0707f628 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0707f630 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0707f638 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0707f63c 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0707f640 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0707f648 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0707f650 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0707f654 00000004 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0707f658 00000004 b CTRPluginFramework::g_mode
0707f65c 00000004 b CTRPluginFramework::g_OpenFileLock
0707f660 00000004 b CTRPluginFramework::g_HookMode
0707f668 00000040 b CTRPluginFramework::g_hookExportFile
0707f6a8 00000010 b CTRPluginFramework::g_returncode
0707f6b8 00000018 b CTRPluginFramework::g_FsTryOpenFileHook
0707f6d0 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0707f6d4 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0707f6d8 00000004 b CTRPluginFramework::g_screenshotEntry
0707f6dc 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
0707f6e0 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
0707f6e4 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0707f6e8 00000004 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0707f6ec 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0707f6f0 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0707f700 00000004 B CTRPluginFramework::__g_hexEditor
0707f704 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0707f708 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0707f718 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0707f71c 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0707f720 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0707f730 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0707f740 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0707f750 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0707f754 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0707f758 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0707f75c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0707f76c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0707f770 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0707f780 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0707f784 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0707f794 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0707f798 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0707f7a0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0707f7a8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0707f7b0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0707f7b8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0707f7c0 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0707f7c4 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0707f7d0 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0707f7dc 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0707f7e8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0707f7f0 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0707f7f8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0707f7fc 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0707f80c 00000004 b CTRPluginFramework::__pmARinstance
0707f810 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0707f814 00000004 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0707f818 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
0707f828 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
0707f838 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
0707f83c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
0707f840 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
0707f848 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
0707f858 00000004 b CTRPluginFramework::g_radioId
0707f85c 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0707f860 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
0707f864 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
0707f868 00000004 B CTRPluginFramework::_pool
0707f870 00000008 B CTRPluginFramework::Screenshot::_timer
0707f878 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0707f880 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0707f888 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
0707f8a0 00000004 B CTRPluginFramework::Screenshot::_filecount
0707f8a4 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
0707f8bc 00000004 B CTRPluginFramework::Screenshot::_display
0707f8c0 00000004 B CTRPluginFramework::Screenshot::_mode
0707f8c8 00000008 B CTRPluginFramework::Screenshot::Timer
0707f8d0 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0707f8d4 00000004 B CTRPluginFramework::Screenshot::_task
0707f8d8 00000004 B CTRPluginFramework::Screenshot::_count
0707f8dc 00000008 b CTRPluginFramework::g_sleepEvent
0707f8e4 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
0707f8e8 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0707f8ec 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0707f8f0 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0707f8f4 00000004 B CTRPluginFramework::HookManager::instance
0707f8f8 00000088 B CTRPluginFramework::Scheduler::_singleton
0707f980 00000040 b CTRPluginFramework::_topBuf
0707f9c0 00000004 B CTRPluginFramework::ScreenImpl::Top
0707f9c4 00000040 b CTRPluginFramework::_botBuf
0707fa04 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0707fa08 0000000c b CTRPluginFramework::Heap::_mutex
0707fa14 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0707fa18 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0707fa1c 00000008 b CTRPluginFramework::Heap::g_heapPool
0707fa24 0000000c b sAddrMap
0707fa30 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
0707fa48 0000000c B CTRPluginFramework::FSPath::FSMutex
0707fa58 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0707fa5c 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0707fac0 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0707fac4 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0707fac8 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0707fad0 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0707fad4 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0707fad8 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0707fae4 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0707faf0 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0707fb00 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
0707fb02 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
0707fb08 0000000c b _mutex
0707fb14 00000008 b sVramPool
0707fb1c 0000000c b sAddrMap
0707fb28 00000004 b srvRefCount
0707fb2c 00000004 b srv2Handle
0707fb30 00000004 b sharedFontAddr
0707fb34 00000004 b arbiter
0707fb38 00000004 b cfguRefCount
0707fb3c 00000004 b cfguHandle
0707fb40 00000004 b fsuHandle
0707fb48 00000080 b fsExemptArchives
0707fbc8 00000004 b fsuRefCount
0707fbcc 00000001 B fs
0707fbd0 0000000c b aptFirstHook
0707fbdc 00000004 b serviceName.7784
0707fbe0 00000004 b aptRefCount
0707fbe4 0000000c b aptEvents
0707fbf0 00000008 b aptSleepEvent
0707fbf8 00000004 b aptEventHandlerThread
0707fbfc 00000004 b aptMessageFunc
0707fc00 00000004 b aptMessageFuncData
0707fc04 00000001 b aptHomeButtonState
0707fc05 00000001 b flagInit.8134
0707fc06 00000001 b flagValue.8135
0707fc08 00001000 b aptParameters
07080c08 00001000 b __stack
07081c08 00000004 b amRefCount
07081c0c 00000004 b amHandle
07081c10 00000004 b acRefCount
07081c14 00000004 b acHandle
07081c18 00000004 b hidRefCount
07081c1c 00000004 b kOld
07081c20 00000004 b kHeld
07081c24 00000004 b cPos
07081c28 00000004 b tPos
07081c2c 00000006 b aVec
07081c32 00000006 b gRate
07081c38 00000004 b kDown
07081c3c 00000004 b kUp
07081c40 00000004 b gspEventData
07081c44 00000038 b gspEvents
07081c7c 0000001c b gspEventCounts
07081c98 00000001 b gspRunEvents
07081c9c 00000004 b gspRefCount
07081ca0 00000004 b gfxSharedMemory
07081ca4 00000001 b gfxThreadID
07081ca8 00000004 b irrstRefCount
07081cac 00000004 b kHeld
07081cb0 00000004 b csPos
07081cb4 00000004 b g_mainThreadVars
07081cb8 b saved_stack
07081cc0 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
07081cc4 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
07081cdc 0000000c B CTRPluginFramework::g_codeTypes
07081ce8 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
07081cec 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
07081cf8 00000001 b CTRPluginFramework::g_condAgainstData
07081cf9 00000001 b CTRPluginFramework::g_newCondDataToggle
07081cfc 00000004 b CTRPluginFramework::__arCodeEditor
07081d00 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
07081d04 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
07081d10 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
07081d18 00000004 b guard variable for CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07081d20 00000008 b CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07081d28 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07081d30 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07081d40 00000001 b CTRPluginFramework::g_progressLoop
07081d48 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07081d50 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07081d58 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07081d60 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07081d68 00000004 b CTRPluginFramework::__converter
07081d6c 00000008 b sMappablePool
07081d74 0000000c b sAddrMap
07081d80 00000004 B CTRPluginFramework::ARHandler::ActiveData
07081d84 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
07081d88 00000008 B CTRPluginFramework::ARHandler::Offset
07081d90 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
07081d94 00000010 B CTRPluginFramework::ARHandler::Data
07081da4 00000008 B CTRPluginFramework::ARHandler::Storage
07081dac 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
07081db0 00000001 b CTRPluginFramework::ToggleFloat
07081db4 00000004 b CTRPluginFramework::g_context
07081db8 00000fa0 b CTRPluginFramework::arStack
07082d58 b completed.10347
07082d5c b object.10352
07082d74 00000004 b (anonymous namespace)::__new_handler
07082d78 00000010 b (anonymous namespace)::emergency_pool
07082d88 0000000c b eh_globals
07082d94 00000010 V std::string::_Rep::_S_empty_rep_storage
07082da4 00000028 B __malloc_current_mallinfo
07082dcc 00000004 B __malloc_max_sbrked_mem
07082dd0 00000004 B __malloc_max_total_mem
07082dd4 00000004 B __malloc_top_pad
07082dd8 0000000b b __tzname_dst
07082de4 0000000b b __tzname_std
07082df0 00000004 b prev_tzenv
07082df4 00000004 B _daylight
07082df8 00000004 B _timezone
07082dfc 00000004 b initial_env
07082e00 00000004 b heap_start.7392
07082e04 00000004 B fake_heap_end
07082e08 00000004 B fake_heap_start
07082e0c 00000048 B __syscalls
07082e54 00000004 B g_sharedFont
07082e58 00000004 B charPerSheet
07082e5c 00000004 B hidMemHandle
07082e60 00000004 B hidHandle
07082e64 00000014 B hidEvents
07082e78 00000004 B hidSharedMem
07082e7c 00000004 B gspEventThread
07082e80 00000004 B gspEvent
07082e84 00000004 B gspGpuHandle
07082e88 00000004 B gspSharedMemHandle
07082e8c 00000004 B gspThreadEventHandle
07082e90 00000004 B irrstMemHandle
07082e94 00000004 B irrstEvent
07082e98 00000004 B irrstHandle
07082e9c 00000004 B irrstSharedMem
07082ea0 00000004 B __ctru_linear_heap
07082ea4 00000004 B __tmp
07082ea8 00000004 B __ctru_linear_heap_size
07082eac 00000004 B __ctru_heap_size
07082eb0 00000004 B __system_retAddr
07082eb4 00000004 B __ctru_heap
07082eb8 B __c_bss_end
07082eb8 B __tls_start
07082ee8 A __end__
07082ee8 B __tls_end
